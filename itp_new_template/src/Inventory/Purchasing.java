/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Inventory;

import com.mxrck.autocompleter.TextAutoCompleter;
import dbconnect.dbconnect;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.JTableHeader;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

public class Purchasing extends javax.swing.JInternalFrame {

    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;

    public Purchasing() {
        initComponents();
        con = dbconnect.connect();
        viewttable();
        rawtable();
        search();
        item();
        sup();

        JTableHeader theader = purchasetable.getTableHeader();
        theader.setFont(new Font("Tahoma", Font.BOLD, 14));
        JTableHeader header = rawtable.getTableHeader();
        header.setFont(new Font("Tahoma", Font.BOLD, 14));
    }

    public void viewttable() {
        searchbox.setText("");
        try {
            String sql = "SELECT * FROM purchase ORDER BY Date";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

            purchasetable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void rawtable() {
        try {
            String sql = "SELECT * FROM rawmaterials ORDER BY BuyDate";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

            rawtable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
            System.out.println(e);
        }
    }
    public void search() {
        TextAutoCompleter text= new TextAutoCompleter(csname);
        
        try {
            String sql = "SELECT FName FROM supplier";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            String n ;
            while(rs.next()){
                n=rs.getString("FName");
                text.addItem(n);
            }
        } catch (Exception e) {
        }
    }

    public void item() {
        TextAutoCompleter text= new TextAutoCompleter(itemname);
        
        try {
            String sql = "SELECT ItemName FROM rawmaterials";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            String n ;
            while(rs.next()){
                n=rs.getString("ItemName");
                text.addItem(n);
            }
        } catch (Exception e) {
        }
    }
    public void sup() {
        TextAutoCompleter text= new TextAutoCompleter(supname);
        
        try {
            String sql = "SELECT FName FROM supplier";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            String n ;
            while(rs.next()){
                n=rs.getString("FName");
                text.addItem(n);
            }
        } catch (Exception e) {
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        purchasetable = new javax.swing.JTable();
        searchbox = new javax.swing.JTextField();
        itemidbox = new javax.swing.JLabel();
        supidbox = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        ratebox = new javax.swing.JTextField();
        amountbox = new javax.swing.JTextField();
        itemname = new javax.swing.JTextField();
        supname = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        status = new javax.swing.JComboBox<>();
        cdiscount = new javax.swing.JTextField();
        stotal = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        csname = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        exdatebox = new com.toedter.calendar.JDateChooser();
        jLabel3 = new javax.swing.JLabel();
        reorderbox = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        valuebox = new javax.swing.JLabel();
        csid = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        rawtable = new javax.swing.JTable();
        search = new javax.swing.JButton();
        clear = new javax.swing.JButton();
        confirm = new javax.swing.JButton();
        add = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();

        setBorder(null);
        setMinimumSize(new java.awt.Dimension(1600, 920));
        setPreferredSize(new java.awt.Dimension(1600, 920));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        purchasetable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        purchasetable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        purchasetable.setFillsViewportHeight(true);
        purchasetable.setGridColor(new java.awt.Color(204, 204, 204));
        purchasetable.setRowHeight(30);
        purchasetable.setSelectionBackground(new java.awt.Color(102, 102, 102));
        jScrollPane1.setViewportView(purchasetable);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 130, 1010, 400);

        searchbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchboxKeyPressed(evt);
            }
        });
        jPanel1.add(searchbox);
        searchbox.setBounds(280, 70, 360, 40);

        itemidbox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itemidbox.setForeground(new java.awt.Color(0, 153, 51));
        itemidbox.setText(" ");
        jPanel1.add(itemidbox);
        itemidbox.setBounds(1510, 420, 60, 40);

        supidbox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        supidbox.setForeground(new java.awt.Color(0, 153, 51));
        supidbox.setText(" ");
        jPanel1.add(supidbox);
        supidbox.setBounds(1510, 360, 60, 40);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Total Value(Rs)");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(1060, 740, 130, 22);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Expire Date");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(1060, 680, 90, 22);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Rate");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(1060, 560, 35, 22);

        ratebox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ratebox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rateboxActionPerformed(evt);
            }
        });
        ratebox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rateboxKeyPressed(evt);
            }
        });
        jPanel1.add(ratebox);
        ratebox.setBounds(1230, 540, 340, 40);

        amountbox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        amountbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                amountboxActionPerformed(evt);
            }
        });
        amountbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                amountboxKeyPressed(evt);
            }
        });
        jPanel1.add(amountbox);
        amountbox.setBounds(1230, 480, 340, 40);

        itemname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        itemname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemnameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                itemnameKeyReleased(evt);
            }
        });
        jPanel1.add(itemname);
        itemname.setBounds(1230, 420, 220, 40);

        supname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        supname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supnameActionPerformed(evt);
            }
        });
        supname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                supnameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                supnameKeyReleased(evt);
            }
        });
        jPanel1.add(supname);
        supname.setBounds(1230, 360, 220, 40);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("ID : ");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(1460, 380, 50, 22);

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/textfield3.png"))); // NOI18N
        jPanel1.add(jLabel13);
        jLabel13.setBounds(1500, 420, 70, 40);

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/textfield3.png"))); // NOI18N
        jPanel1.add(jLabel17);
        jLabel17.setBounds(1500, 360, 70, 40);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Supplier Name");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(1060, 380, 114, 22);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Amount(Kg)");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(1060, 500, 100, 22);

        status.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        status.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Paid", "Not paid" }));
        jPanel1.add(status);
        status.setBounds(1240, 220, 120, 40);

        cdiscount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cdiscount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cdiscountActionPerformed(evt);
            }
        });
        cdiscount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cdiscountKeyPressed(evt);
            }
        });
        jPanel1.add(cdiscount);
        cdiscount.setBounds(1240, 160, 330, 40);

        stotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        stotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stotalActionPerformed(evt);
            }
        });
        stotal.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                stotalKeyPressed(evt);
            }
        });
        jPanel1.add(stotal);
        stotal.setBounds(1240, 100, 330, 40);

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/textfield3.png"))); // NOI18N
        jPanel1.add(jLabel16);
        jLabel16.setBounds(1500, 40, 70, 40);

        csname.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        csname.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                csnameKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                csnameKeyReleased(evt);
            }
        });
        jPanel1.add(csname);
        csname.setBounds(1240, 40, 210, 40);

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel14.setText("Supplier Name");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(1060, 60, 140, 30);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Total Bill Amount ");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(1060, 110, 143, 40);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Discount");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(1060, 170, 68, 30);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Payment Status");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(1060, 230, 130, 22);

        exdatebox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(exdatebox);
        exdatebox.setBounds(1230, 660, 340, 40);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Item Name");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(1060, 440, 100, 22);

        reorderbox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        reorderbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                reorderboxKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                reorderboxKeyTyped(evt);
            }
        });
        jPanel1.add(reorderbox);
        reorderbox.setBounds(1230, 600, 340, 40);

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel12.setText("Reorder Level");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(1060, 620, 107, 22);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setText("ID : ");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(1460, 60, 40, 22);

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel18.setText("ID : ");
        jPanel1.add(jLabel18);
        jLabel18.setBounds(1460, 440, 50, 22);

        valuebox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        valuebox.setText(" ");
        jPanel1.add(valuebox);
        valuebox.setBounds(1240, 720, 330, 40);

        csid.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        csid.setForeground(new java.awt.Color(0, 204, 0));
        csid.setText(" ");
        jPanel1.add(csid);
        csid.setBounds(1510, 40, 60, 40);

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/textfield340.png"))); // NOI18N
        jLabel19.setText(" ");
        jPanel1.add(jLabel19);
        jLabel19.setBounds(1230, 720, 340, 40);

        rawtable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rawtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        rawtable.setFillsViewportHeight(true);
        rawtable.setGridColor(new java.awt.Color(204, 204, 204));
        rawtable.setRowHeight(30);
        rawtable.setSelectionBackground(new java.awt.Color(102, 102, 102));
        jScrollPane2.setViewportView(rawtable);

        jPanel1.add(jScrollPane2);
        jScrollPane2.setBounds(30, 570, 1010, 280);

        search.setBackground(new java.awt.Color(255, 255, 255));
        search.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/search.png"))); // NOI18N
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        jPanel1.add(search);
        search.setBounds(670, 60, 120, 50);

        clear.setBackground(new java.awt.Color(255, 255, 255));
        clear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/clear.png"))); // NOI18N
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        jPanel1.add(clear);
        clear.setBounds(1450, 800, 120, 50);

        confirm.setBackground(new java.awt.Color(255, 255, 255));
        confirm.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        confirm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/confirm.png"))); // NOI18N
        confirm.setText("Confirm");
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });
        jPanel1.add(confirm);
        confirm.setBounds(1060, 280, 120, 50);

        add.setBackground(new java.awt.Color(255, 255, 255));
        add.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        add.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/add.png"))); // NOI18N
        add.setText("Add");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        jPanel1.add(add);
        add.setBounds(1060, 800, 120, 50);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/print.png"))); // NOI18N
        jButton1.setText("Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(920, 60, 120, 50);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/body.jpg"))); // NOI18N
        jLabel11.setText(" ");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(0, 0, 1600, 890);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 887, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchboxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String search = searchbox.getText();

            try {
                String sql4 = "SELECT * FROM purchase WHERE SupplierName like '%" + search + "%' ";
                pst = con.prepareStatement(sql4);
                rs = pst.executeQuery();

                purchasetable.setModel(DbUtils.resultSetToTableModel(rs));

            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_searchboxKeyPressed

    private void rateboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rateboxKeyPressed
        int key = evt.getKeyCode();
        if ((key >= evt.VK_0 && key <= evt.VK_9) || (key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || key == KeyEvent.VK_BACK_SPACE || key == KeyEvent.VK_PERIOD || key == KeyEvent.VK_ENTER) {
            ratebox.setEditable(true);
            ratebox.setBackground(Color.white);
        } else {
            getToolkit().beep();
            ratebox.setEditable(false);
            ratebox.setBackground(Color.LIGHT_GRAY);
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String namount = amountbox.getText();
            String rate = ratebox.getText();
            float no1 = Float.parseFloat(namount);
            float no2 = Float.parseFloat(rate);
            float result = no1 * no2;
            String nvalue = Float.toString(result);
            valuebox.setText(nvalue);
            reorderbox.requestFocusInWindow();
        }
    }//GEN-LAST:event_rateboxKeyPressed

    private void amountboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_amountboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_amountboxActionPerformed

    private void amountboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountboxKeyPressed
        int key = evt.getKeyCode();
        if ((key >= evt.VK_0 && key <= evt.VK_9) || (key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || key == KeyEvent.VK_BACK_SPACE || key == KeyEvent.VK_PERIOD||key==KeyEvent.VK_ENTER) {
            amountbox.setEditable(true);
            amountbox.setBackground(Color.white);
        } else {
            getToolkit().beep();
            amountbox.setEditable(false);
            amountbox.setBackground(Color.LIGHT_GRAY);
        }
        if(key==KeyEvent.VK_ENTER)
        {
            ratebox.requestFocusInWindow();
        }
        
    }//GEN-LAST:event_amountboxKeyPressed

    private void itemnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemnameKeyPressed
       
    }//GEN-LAST:event_itemnameKeyPressed

    private void supnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_supnameActionPerformed

    private void supnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_supnameKeyPressed
        
    }//GEN-LAST:event_supnameKeyPressed

    private void cdiscountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cdiscountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cdiscountActionPerformed

    private void cdiscountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cdiscountKeyPressed
        int key = evt.getKeyCode();
        if ((key >= evt.VK_0 && key <= evt.VK_9) || (key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || key == KeyEvent.VK_BACK_SPACE || key==KeyEvent.VK_ENTER) {
            cdiscount.setEditable(true);
            cdiscount.setBackground(Color.white);
        } else {
            getToolkit().beep();
            cdiscount.setEditable(false);
            cdiscount.setBackground(Color.LIGHT_GRAY);
        }
        if(key==KeyEvent.VK_ENTER)
        {
            status.requestFocusInWindow();
        }
    }//GEN-LAST:event_cdiscountKeyPressed

    private void stotalKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_stotalKeyPressed
        int key = evt.getKeyCode();
        if ((key >= evt.VK_0 && key <= evt.VK_9) || (key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || key == KeyEvent.VK_BACK_SPACE || key == KeyEvent.VK_PERIOD||key == KeyEvent.VK_ENTER) {
            stotal.setEditable(true);
            stotal.setBackground(Color.white);
        } else {
            getToolkit().beep();
            stotal.setEditable(false);
            stotal.setBackground(Color.LIGHT_GRAY);
        }
        if(key==KeyEvent.VK_ENTER)
        {
            cdiscount.requestFocusInWindow();
        }
    }//GEN-LAST:event_stotalKeyPressed

    private void csnameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_csnameKeyPressed

       
    }//GEN-LAST:event_csnameKeyPressed

    private void reorderboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reorderboxKeyPressed
        int key = evt.getKeyCode();
        if ((key >= evt.VK_0 && key <= evt.VK_9) || (key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || key == KeyEvent.VK_BACK_SPACE) {
            reorderbox.setEditable(true);
            reorderbox.setBackground(Color.white);
        } else {
            getToolkit().beep();
            reorderbox.setEditable(false);
            reorderbox.setBackground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_reorderboxKeyPressed

    private void reorderboxKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reorderboxKeyTyped

    }//GEN-LAST:event_reorderboxKeyTyped

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        String search = searchbox.getText();

        try {
            String sql4 = "SELECT * FROM purchase WHERE SupplierName like '" + search + "%' ";
            pst = con.prepareStatement(sql4);
            rs = pst.executeQuery();

            purchasetable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_searchActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_clearActionPerformed

    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed
        float sid = 0;
        String name = csname.getText();
        String amount = stotal.getText();
        String discount = cdiscount.getText();
        String date = showDate();
        String Status = status.getSelectedItem().toString();
        if (name.isEmpty() || amount.isEmpty() || discount.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill details");
        } else {
            float amo = Float.parseFloat(amount);
            float dis = Float.parseFloat(discount);
            String payamount = Float.toString(amo - (amo * (dis / 100)));
            try {
                String sql1 = "SELECT SuplierID FROM supplier WHERE FName like '" + name + "'  ";
                pst = con.prepareStatement(sql1);
                rs = pst.executeQuery();
                if (rs.next()) {
                    sid = Float.parseFloat(rs.getString("SuplierID"));
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            String id = Float.toString(sid);
            int x = JOptionPane.showConfirmDialog(null, "Do You really want to update");
            if (x == 0) {
                String sql3 = "INSERT INTO purchase (SupplierID,SupplierName,TotalAmount,Discount,PayAmount,Date,Status) VALUES ('" + id + "','" + name + "','" + amount + "','" + discount + "','" + payamount + "','" + date + "','" + Status + "')";
                try {
                    pst = con.prepareStatement(sql3);
                    pst.execute();
                    JOptionPane.showMessageDialog(null, "Your details Added");
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e);
                }
                csid.setText("");
                csname.setText("");
                stotal.setText("");
                cdiscount.setText("");
            }
            viewttable();
        }
    }//GEN-LAST:event_confirmActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        String amount;
        float eamount = 0;
        String value;
        float evalue = 0;
        String sid = supidbox.getText();
        String rawid = itemidbox.getText();
        String sname = supname.getText();
        String raname = itemname.getText();
        String namount = amountbox.getText();
        String rate = ratebox.getText();
        String reodrer = reorderbox.getText();
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        if (sid.isEmpty() || rawid.isEmpty() || sname.isEmpty() || raname.isEmpty() || namount.isEmpty() || rate.isEmpty() || reodrer.isEmpty()||df==null) {
            JOptionPane.showMessageDialog(null, "Please fill details");
        } else {
            Date bdate;
            bdate = exdatebox.getDate();
            String exdate = df.format(bdate);
            String bydate = showDate();
            float no1 = Float.parseFloat(namount);
            float no2 = Float.parseFloat(rate);
            float result = no1 * no2;
            String nvalue = Float.toString(result);
            valuebox.setText(nvalue);
            if (no1 >= Float.parseFloat(reodrer)) {
                if (sidcheck(sname) == true && itemidcheck(raname) == true && datecheck(raname) == true) {
                    try {
                        String sql1 = "SELECT Amount,TotalValue FROM rawmaterials WHERE ItemId like '" + rawid + "' ";
                        pst = con.prepareStatement(sql1);
                        rs = pst.executeQuery();
                        if (rs.next()) {
                            eamount = Float.parseFloat(rs.getString("Amount"));
                            evalue = Float.parseFloat(rs.getString("TotalValue"));

                        }
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }

                    amount = Float.toString(eamount + Float.parseFloat(namount));
                    value = Float.toString(evalue + Float.parseFloat(nvalue));
                    int x = JOptionPane.showConfirmDialog(null, "Do You really want to Update");
                    if (x == 0) {
                        String sql3 = "UPDATE rawmaterials SET ItemName='" + raname + "',Amount='" + amount + "',rate='" + rate + "',ReorderLevel='" + reodrer + "',ExpireDate='" + exdate + "',TotalValue='" + value + "',BuyDate='" + bydate + "',Status='Good' WHERE ItemId='" + rawid + "' and SuplierID='" + sid + "'";
                        try {
                            pst = con.prepareStatement(sql3);
                            pst.execute();
                            JOptionPane.showMessageDialog(null, "Your Item updated");
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                        supidbox.setText("");
                        itemidbox.setText("");
                        supname.setText("");
                        itemname.setText("");
                        amountbox.setText("");
                        ratebox.setText("");
                        reorderbox.setText("");
                        exdatebox.setDate(null);
                        valuebox.setText("");
                    }
                } else if (sidcheck(sname)==true) {
                    int x = JOptionPane.showConfirmDialog(null, "Do You really want to Add");
                    if (x == 0) {
                        String sql3 = "INSERT INTO rawmaterials (SuplierID,ItemName,Amount,Rate,ReorderLevel,ExpireDate,TotalValue,BuyDate,Status) VALUES ('" + sid + "','" + raname + "','" + namount + "','" + rate + "','" + reodrer + "','" + exdate + "','" + nvalue + "','" + bydate + "','Good')";
                        try {
                            pst = con.prepareStatement(sql3);
                            pst.execute();
                            JOptionPane.showMessageDialog(null, "New item. Your Item Added");
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                        supidbox.setText("");
                        itemidbox.setText("");
                        supname.setText("");
                        itemname.setText("");
                        amountbox.setText("");
                        ratebox.setText("");
                        reorderbox.setText("");
                        exdatebox.setDate(null);
                        valuebox.setText("");
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Invalid Supplier");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Reorder level reach the amount");
            }
            rawtable();
        }
    }//GEN-LAST:event_addActionPerformed

    private void csnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_csnameKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String sname = csname.getText();
            try {
                String sql1 = "SELECT SuplierID FROM supplier WHERE FName like '" + sname + "' ";
                pst = con.prepareStatement(sql1);
                rs = pst.executeQuery();
                if (rs.next()) {
                    csid.setText(rs.getString("SuplierID"));
                } else {
                    JOptionPane.showMessageDialog(null, "Not valid. Please add supplier details");
                }
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_csnameKeyReleased

    private void supnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_supnameKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String sname = supname.getText();
            try {
                String sql1 = "SELECT SuplierID FROM supplier WHERE FName like '" + sname + "' ";
                pst = con.prepareStatement(sql1);
                rs = pst.executeQuery();
                if (rs.next()) {
                    supidbox.setText(rs.getString("SuplierID"));
                } else {
                    JOptionPane.showMessageDialog(null, "Not valid. Please add supplier details");
                }
            } catch (Exception e) {
                System.out.println(e);
            }
            itemname.requestFocusInWindow();
        }
        
    }//GEN-LAST:event_supnameKeyReleased

    private void itemnameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemnameKeyReleased
         if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String raname = itemname.getText();
            try {
                String sql1 = "SELECT ItemId FROM rawmaterials WHERE ItemName like '" + raname + "' ";
                pst = con.prepareStatement(sql1);
                rs = pst.executeQuery();
                if (rs.next()) {
                    itemidbox.setText(rs.getString("ItemId"));
                } else {
                    JOptionPane.showMessageDialog(null, "Not match. New item");
                }
            } catch (Exception e) {
                System.out.println(e);
            }
            amountbox.requestFocusInWindow();
        }   
    }//GEN-LAST:event_itemnameKeyReleased

    private void stotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_stotalActionPerformed

    private void rateboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rateboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rateboxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String name = searchbox.getText();
        if (name.isEmpty()) {
            try {
                String rep = "C:\\Users\\MUNESH\\Documents\\NetBeansProjects\\itp_new_template\\ireport\\purchase.jrxml";
                JasperReport jr = JasperCompileManager.compileReport(rep);
                JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
                JasperViewer.viewReport(jp);
            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        } else {
            try {

                JasperDesign jd = JRXmlLoader.load("C:\\Users\\MUNESH\\Documents\\NetBeansProjects\\itp_new_template\\ireport\\purchase.jrxml");
                String sql = "select * from purchase where SupplierName like'%" + name + "%'";
                JRDesignQuery n1 = new JRDesignQuery();
                n1.setText(sql);
                jd.setQuery(n1);
                JasperReport jr = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
                JasperViewer.viewReport(jp);
            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    String showDate() {
        java.util.Date d = new java.util.Date();
        SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd");
        return (s.format(d));
    }

    public boolean sidcheck(String sname) {
        boolean status = true;
        try {
            String sql = "SELECT SuplierID FROM supplier WHERE FName like '" + sname + "' ";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            if (rs.next()) {
                status = true;
            } else {
                status = false;
            }
        } catch (Exception e) {
        }
        return status;
    }

    public boolean itemidcheck(String raname) {
        boolean status = true;
        try {
            String sql = "SELECT ItemId FROM rawmaterials WHERE ItemName like '" + raname + "'  ";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            if (rs.next()) {
                status = true;
            } else {
                status = false;
            }
        } catch (Exception e) {
        }
        return status;
    }

    public boolean datecheck(String raname) {
        boolean status = true;
        try {
            String sql = "SELECT ItemId FROM rawmaterials WHERE ItemName like '" + raname + "' AND Status = 'Good'";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            if (rs.next()) {
                status = true;
            } else {
                status = false;
            }
        } catch (Exception e) {
        }
        return status;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField amountbox;
    private javax.swing.JTextField cdiscount;
    private javax.swing.JButton clear;
    private javax.swing.JButton confirm;
    private javax.swing.JLabel csid;
    private javax.swing.JTextField csname;
    private com.toedter.calendar.JDateChooser exdatebox;
    private javax.swing.JLabel itemidbox;
    private javax.swing.JTextField itemname;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable purchasetable;
    private javax.swing.JTextField ratebox;
    private javax.swing.JTable rawtable;
    private javax.swing.JTextField reorderbox;
    private javax.swing.JButton search;
    private javax.swing.JTextField searchbox;
    private javax.swing.JComboBox<String> status;
    private javax.swing.JTextField stotal;
    private javax.swing.JLabel supidbox;
    private javax.swing.JTextField supname;
    private javax.swing.JLabel valuebox;
    // End of variables declaration//GEN-END:variables
}
