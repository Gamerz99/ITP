/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Inventory;

import com.mxrck.autocompleter.TextAutoCompleter;
import dbconnect.dbconnect;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.JTableHeader;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

public class EquipmentHandling extends javax.swing.JInternalFrame {

    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    Inventory i = new Inventory();
    String p = "1";

    public EquipmentHandling() {
        initComponents();
        con = dbconnect.connect();
        equipmentoredr();
        equpment();
        JTableHeader theader = OrderTable.getTableHeader();
        theader.setFont(new Font("Tahoma", Font.BOLD, 14));
    }

    public void equipmentoredr() {
        String today = showDate();
        try {
            String sql = "SELECT EquipmentId, EquipmentName, Qty,Date,Time,Type, Status FROM equipmentorder where Status like 'Not Send' and Date like '" + today + "'";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

            OrderTable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        confirm.setVisible(true);
        checkin.setVisible(false);
        jLabel8.setText("Status");
        statusbox.setText("Not send");
    }

    public void vieworedr() {
        try {
            String sql = "SELECT EquipmentId, EquipmentName, Qty, Date,SendDate,Time,Type, Status FROM eorderrecord where Status like 'Send'";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

            OrderTable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        jLabel8.setText("Status");
        statusbox.setText("Not send");
    }

    public void equipmentout() {
        try {
            String sql = "SELECT EquipmentId, EquipmentName, Qty, Date, Time, Type, CheckID FROM equipmetout order by Date desc";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

            OrderTable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        jLabel8.setText("Check ID");
        confirm.setVisible(false);
        checkin.setVisible(true);
        statusbox.setText("");
    }

    public void equpment() {
        TextAutoCompleter text = new TextAutoCompleter(namebox);

        try {
            String sql = "SELECT EquipmentName FROM equipmet";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            String n;
            while (rs.next()) {
                n = rs.getString("EquipmentName");
                text.addItem(n);
            }
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel7 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrderTable = new javax.swing.JTable();
        statusbox = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        clear = new javax.swing.JButton();
        search = new javax.swing.JButton();
        confirm = new javax.swing.JButton();
        datebox = new com.toedter.calendar.JDateChooser();
        typebox = new javax.swing.JComboBox<>();
        timebox = new javax.swing.JComboBox<>();
        qtybox = new javax.swing.JTextField();
        namebox = new javax.swing.JTextField();
        checkin = new javax.swing.JButton();
        sdate = new com.toedter.calendar.JDateChooser();
        idbox = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        today = new javax.swing.JPanel();
        ttext = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        all = new javax.swing.JPanel();
        atext = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        check = new javax.swing.JPanel();
        ctext = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        event = new javax.swing.JPanel();
        otext = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        qavailability = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(null);
        setMinimumSize(new java.awt.Dimension(1600, 920));
        setPreferredSize(new java.awt.Dimension(1600, 920));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setLayout(null);

        OrderTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        OrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        OrderTable.setFillsViewportHeight(true);
        OrderTable.setGridColor(new java.awt.Color(204, 204, 204));
        OrderTable.setRowHeight(30);
        OrderTable.setSelectionBackground(new java.awt.Color(102, 102, 102));
        OrderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrderTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(OrderTable);

        jPanel7.add(jScrollPane1);
        jScrollPane1.setBounds(30, 260, 1060, 590);

        statusbox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        statusbox.setText("Not send");
        jPanel7.add(statusbox);
        statusbox.setBounds(1270, 630, 280, 40);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Equipment Id");
        jPanel7.add(jLabel2);
        jLabel2.setBounds(1110, 290, 107, 22);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Equipment Name");
        jPanel7.add(jLabel3);
        jLabel3.setBounds(1110, 350, 135, 22);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Qty");
        jPanel7.add(jLabel4);
        jLabel4.setBounds(1110, 410, 28, 22);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Date");
        jPanel7.add(jLabel5);
        jLabel5.setBounds(1110, 470, 36, 22);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Time");
        jPanel7.add(jLabel6);
        jLabel6.setBounds(1110, 530, 39, 22);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Type");
        jPanel7.add(jLabel7);
        jLabel7.setBounds(1110, 580, 39, 22);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Status");
        jPanel7.add(jLabel8);
        jLabel8.setBounds(1110, 640, 110, 22);

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/textfield300.png"))); // NOI18N
        jLabel14.setText("  ");
        jPanel7.add(jLabel14);
        jLabel14.setBounds(1270, 270, 300, 40);

        clear.setBackground(new java.awt.Color(255, 255, 255));
        clear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/clear.png"))); // NOI18N
        clear.setText("Clear");
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        jPanel7.add(clear);
        clear.setBounds(1450, 800, 120, 50);

        search.setBackground(new java.awt.Color(255, 255, 255));
        search.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/search.png"))); // NOI18N
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        jPanel7.add(search);
        search.setBounds(700, 180, 120, 50);

        confirm.setBackground(new java.awt.Color(255, 255, 255));
        confirm.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        confirm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/confirm.png"))); // NOI18N
        confirm.setText("Confirm");
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });
        jPanel7.add(confirm);
        confirm.setBounds(1110, 800, 120, 50);

        datebox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel7.add(datebox);
        datebox.setBounds(1270, 450, 300, 40);

        typebox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        typebox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Party", "Wedding", "Other" }));
        jPanel7.add(typebox);
        typebox.setBounds(1270, 570, 300, 40);

        timebox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        timebox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day", "Night", "Other" }));
        jPanel7.add(timebox);
        timebox.setBounds(1270, 510, 300, 40);

        qtybox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        qtybox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyboxActionPerformed(evt);
            }
        });
        jPanel7.add(qtybox);
        qtybox.setBounds(1270, 390, 200, 40);

        namebox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        namebox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameboxActionPerformed(evt);
            }
        });
        namebox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameboxKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameboxKeyReleased(evt);
            }
        });
        jPanel7.add(namebox);
        namebox.setBounds(1270, 330, 300, 40);

        checkin.setBackground(new java.awt.Color(255, 255, 255));
        checkin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        checkin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/checkin.png"))); // NOI18N
        checkin.setText("Check in");
        checkin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkinActionPerformed(evt);
            }
        });
        jPanel7.add(checkin);
        checkin.setBounds(1280, 800, 120, 50);

        sdate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel7.add(sdate);
        sdate.setBounds(330, 190, 300, 40);

        idbox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        idbox.setForeground(new java.awt.Color(0, 153, 51));
        jPanel7.add(idbox);
        idbox.setBounds(1270, 270, 290, 40);

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/textfield300.png"))); // NOI18N
        jLabel20.setText("  ");
        jPanel7.add(jLabel20);
        jLabel20.setBounds(1270, 630, 300, 40);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/print.png"))); // NOI18N
        jButton1.setText("Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel7.add(jButton1);
        jButton1.setBounds(970, 180, 120, 50);

        today.setBackground(new java.awt.Color(204, 204, 204));
        today.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        today.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        today.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                todayMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                todayMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                todayMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                todayMouseReleased(evt);
            }
        });
        today.setLayout(null);

        ttext.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ttext.setText("View Today Send");
        today.add(ttext);
        ttext.setBounds(100, 10, 140, 30);

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/send.png"))); // NOI18N
        jLabel17.setText(" ");
        today.add(jLabel17);
        jLabel17.setBounds(10, 0, 64, 64);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Equipments");
        today.add(jLabel9);
        jLabel9.setBounds(100, 30, 100, 30);

        jPanel7.add(today);
        today.setBounds(330, 40, 250, 70);

        all.setBackground(new java.awt.Color(204, 204, 204));
        all.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        all.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        all.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                allMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                allMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                allMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                allMouseReleased(evt);
            }
        });
        all.setLayout(null);

        atext.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        atext.setText("View All Send ");
        all.add(atext);
        atext.setBounds(100, 10, 120, 30);

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/send.png"))); // NOI18N
        jLabel18.setText(" ");
        all.add(jLabel18);
        jLabel18.setBounds(10, 0, 64, 64);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Equipments");
        all.add(jLabel10);
        jLabel10.setBounds(100, 30, 100, 30);

        jPanel7.add(all);
        all.setBounds(630, 40, 250, 70);

        check.setBackground(new java.awt.Color(204, 204, 204));
        check.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        check.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        check.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                checkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                checkMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                checkMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                checkMouseReleased(evt);
            }
        });
        check.setLayout(null);

        ctext.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ctext.setText("Check Out");
        check.add(ctext);
        ctext.setBounds(100, 20, 140, 30);

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/check.png"))); // NOI18N
        jLabel16.setText(" ");
        check.add(jLabel16);
        jLabel16.setBounds(20, 0, 64, 64);

        jPanel7.add(check);
        check.setBounds(930, 40, 250, 70);

        event.setBackground(new java.awt.Color(204, 204, 204));
        event.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        event.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        event.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                eventMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                eventMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                eventMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                eventMouseReleased(evt);
            }
        });
        event.setLayout(null);

        otext.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        otext.setText("Event Order");
        event.add(otext);
        otext.setBounds(100, 20, 140, 30);

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/fstock.png"))); // NOI18N
        jLabel19.setText(" ");
        event.add(jLabel19);
        jLabel19.setBounds(20, 0, 64, 64);

        jPanel7.add(event);
        event.setBounds(30, 40, 250, 70);

        qavailability.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        qavailability.setForeground(new java.awt.Color(0, 153, 51));
        jPanel7.add(qavailability);
        qavailability.setBounds(1500, 390, 70, 40);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/textfield3.png"))); // NOI18N
        jLabel1.setText(" ");
        jPanel7.add(jLabel1);
        jLabel1.setBounds(1500, 390, 70, 40);

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/body.jpg"))); // NOI18N
        jLabel15.setText(" ");
        jPanel7.add(jLabel15);
        jLabel15.setBounds(0, 0, 1600, 890);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 1600, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 890, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OrderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrderTableMouseClicked

        int row = OrderTable.getSelectedRow();
        String eqemid = OrderTable.getValueAt(row, 0).toString();
        String eqname = OrderTable.getValueAt(row, 1).toString();
        String qty = OrderTable.getValueAt(row, 2).toString();
        String date = OrderTable.getValueAt(row, 3).toString();
        String time = OrderTable.getValueAt(row, 4).toString();
        String type = OrderTable.getValueAt(row, 5).toString();
        String status = OrderTable.getValueAt(row, 6).toString();
        try {
            idbox.setText(eqemid);
            namebox.setText(eqname);
            qtybox.setText(qty);
            Date edate = new SimpleDateFormat("yyyy-MM-dd").parse((String) date);
            datebox.setDate(edate);
            typebox.setSelectedItem(type);
            timebox.setSelectedItem(time);
            statusbox.setText(status);
        } catch (Exception e) {
            System.out.println(e);
        }
        try {
            String sql1 = "SELECT EquipmentId,Qty FROM equipmet WHERE EquipmentName ='" + eqname + "' ";
            pst = con.prepareStatement(sql1);
            rs = pst.executeQuery();
            if (rs.next()) {
                idbox.setText(rs.getString("EquipmentId"));
                qavailability.setText(rs.getString("Qty"));
                qtybox.requestFocusInWindow();
            } else {
                JOptionPane.showMessageDialog(null, "Not match");
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_OrderTableMouseClicked

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        Date edate;
        edate = sdate.getDate();
        String search = df.format(edate);;
        try {
            String sql4 = "SELECT EquipmentId, EquipmentName,Qty,Date,SendDate,Time ,Type,Status FROM eorderrecord where SendDate like '%" + search + "%' ";
            pst = con.prepareStatement(sql4);
            rs = pst.executeQuery();

            OrderTable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_searchActionPerformed

    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed

        float eqty = 0;
        String nqty;
        float evalue = 0;
        String nvalue;
        float rate = 0;
        String eqid = idbox.getText();
        String eqname = namebox.getText();
        String qty = qtybox.getText();
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        if (eqid.isEmpty() || eqname.isEmpty() || qty.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please fill details");
        } else {
            Date edate;
            edate = datebox.getDate();
            String date = df.format(edate);
            String time = timebox.getSelectedItem().toString();
            String type = typebox.getSelectedItem().toString();
            String status = statusbox.getText();
            String senddate = showDate();
            try {
                String sql1 = "SELECT Qty,TotalValue,PriceRate FROM equipmet WHERE EquipmentId = '" + eqid + "' ";
                pst = con.prepareStatement(sql1);
                rs = pst.executeQuery();
                if (rs.next()) {
                    eqty = Float.parseFloat(rs.getString("Qty"));
                    evalue = Float.parseFloat(rs.getString("TotalValue"));
                    rate = Float.parseFloat(rs.getString("PriceRate"));
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            nvalue = Float.toString(evalue - (rate * Float.parseFloat(qty)));
            nqty = Float.toString(eqty - Float.parseFloat(qty));
            if (eqty >= Float.parseFloat(qty) && eqty > 0) {
                if (status.equals("Not send")) {
                    int x = JOptionPane.showConfirmDialog(null, "Do You want confirm");
                    if (x == 0) {
                        i.confirmeqhandling(eqid, eqname, qty, senddate, time, type, nqty, nvalue);
                        equipmentoredr();
                        idbox.setText("");
                        namebox.setText("");
                        qtybox.setText("");
                        datebox.setDate(null);
                        typebox.setSelectedIndex(0);
                        timebox.setSelectedIndex(0);
                        statusbox.setText("Not send");
                        qavailability.setText("");
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Order alredy send");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Equipment out of stock");
            }
        }
    }//GEN-LAST:event_confirmActionPerformed

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        idbox.setText("");
        namebox.setText("");
        qtybox.setText("");
        datebox.setDate(null);
        typebox.setSelectedIndex(0);
        timebox.setSelectedIndex(0);
        statusbox.setText("Not send");
        qavailability.setText("");
    }//GEN-LAST:event_clearActionPerformed

    private void nameboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameboxActionPerformed

    private void qtyboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyboxActionPerformed

    private void nameboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameboxKeyPressed

    }//GEN-LAST:event_nameboxKeyPressed

    private void checkinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkinActionPerformed
        float eqty = 0;
        String nqty;
        float oqty = 0;
        String onqty;
        float evalue = 0;
        String nvalue;
        float rate = 0;
        String onvalue;
        String eqid = idbox.getText();
        String eqname = namebox.getText();
        String qty = qtybox.getText();
        String status = statusbox.getText();
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        if (eqid.isEmpty() || eqname.isEmpty() || qty.isEmpty() || status.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please select equipment");
        } else {
            Date edate;
            edate = datebox.getDate();
            String date = df.format(edate);
            String time = timebox.getSelectedItem().toString();
            String type = typebox.getSelectedItem().toString();
            String senddate = showDate();
            try {
                String sql1 = "SELECT Qty,TotalValue,PriceRate FROM equipmet WHERE EquipmentId = '" + eqid + "' ";
                pst = con.prepareStatement(sql1);
                rs = pst.executeQuery();
                if (rs.next()) {
                    eqty = Float.parseFloat(rs.getString("Qty"));
                    evalue = Float.parseFloat(rs.getString("TotalValue"));
                    rate = Float.parseFloat(rs.getString("PriceRate"));
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            try {
                String sql1 = "SELECT Qty FROM equipmetout WHERE CheckID = '" + status + "' ";
                pst = con.prepareStatement(sql1);
                rs = pst.executeQuery();
                if (rs.next()) {
                    oqty = Float.parseFloat(rs.getString("Qty"));
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
            nvalue = Float.toString(evalue + (rate * Float.parseFloat(qty)));
            nqty = Float.toString(eqty + Float.parseFloat(qty));
            int x = JOptionPane.showConfirmDialog(null, "Do You want confirm");
            if (x == 0) {
                if (oqty == Float.parseFloat(qty)) {
                    try {
                        String sql1 = "UPDATE equipmet SET Qty='" + nqty + "',TotalValue='" + nvalue + "' WHERE EquipmentId = '" + eqid + "' AND EquipmentName ='" + eqname + "'";
                        String sql2 = "DELETE FROM equipmetout WHERE EquipmentId='" + eqid + "' AND CheckID='" + status + "'";
                        pst = con.prepareStatement(sql1);
                        pst.execute();
                        pst = con.prepareStatement(sql2);
                        pst.execute();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e);
                    }
                } else if (oqty > Float.parseFloat(qty)) {
                    onqty = Float.toString(oqty - Float.parseFloat(qty));
                    onvalue = Float.toString((rate * Float.parseFloat(onqty)));
                    int y = JOptionPane.showConfirmDialog(null, "Do You want later check in this '" + onqty + "' Equipments ");
                    if (y == 1) {
                        try {
                            String sql1 = "UPDATE equipmet SET Qty='" + nqty + "',TotalValue='" + nvalue + "' WHERE EquipmentId = '" + eqid + "' AND EquipmentName ='" + eqname + "'";
                            String sql2 = "DELETE FROM equipmetout WHERE EquipmentId='" + eqid + "' AND CheckID='" + status + "'";
                            String sql3 = "INSERT INTO rejectequipment (EquipmentId, EquipmentName,Qty,PriceRate,Date,TotalValue) VALUES ('" + eqid + "','" + eqname + "','" + onqty + "','" + rate + "','" + senddate + "','" + onvalue + "')";
                            pst = con.prepareStatement(sql1);
                            pst.execute();
                            pst = con.prepareStatement(sql3);
                            pst.execute();
                            pst = con.prepareStatement(sql2);
                            pst.execute();
                            JOptionPane.showMessageDialog(null, "'" + onqty + "' Are Rejected");
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    } else if (y == 0) {
                        try {
                            String sql1 = "UPDATE equipmet SET Qty='" + nqty + "',TotalValue='" + nvalue + "' WHERE EquipmentId = '" + eqid + "' AND EquipmentName ='" + eqname + "'";
                            String sql2 = "UPDATE equipmetout SET Qty='" + onqty + "' WHERE CheckID = '" + status + "'";
                            pst = con.prepareStatement(sql1);
                            pst.execute();
                            pst = con.prepareStatement(sql2);
                            pst.execute();
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e);
                        }
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Qty is large");
                }
                idbox.setText("");
                namebox.setText("");
                qtybox.setText("");
                datebox.setDate(null);
                typebox.setSelectedIndex(0);
                timebox.setSelectedIndex(0);
                statusbox.setText("Not send");
                qavailability.setText("");
            }
        }
        equipmentout();
    }//GEN-LAST:event_checkinActionPerformed

    private void checkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkMouseEntered
        check.setBackground(new Color(51, 51, 51));
        ctext.setForeground(Color.white);
    }//GEN-LAST:event_checkMouseEntered

    private void checkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkMouseExited
        check.setBackground(new Color(204, 204, 204));
        ctext.setForeground(Color.BLACK);
    }//GEN-LAST:event_checkMouseExited

    private void checkMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkMousePressed
        check.setBackground(new Color(255, 255, 255));
        ctext.setForeground(Color.BLACK);
    }//GEN-LAST:event_checkMousePressed

    private void checkMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkMouseReleased
        p = "4";
        equipmentout();
        confirm.setVisible(false);
        checkin.setVisible(true);
        check.setBackground(new Color(204, 204, 204));
        ctext.setForeground(Color.BLACK);
    }//GEN-LAST:event_checkMouseReleased

    private void todayMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_todayMouseEntered
        today.setBackground(new Color(51, 51, 51));
        ttext.setForeground(Color.white);
        jLabel9.setForeground(Color.white);
    }//GEN-LAST:event_todayMouseEntered

    private void todayMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_todayMouseExited
        today.setBackground(new Color(204, 204, 204));
        ttext.setForeground(Color.BLACK);
        jLabel9.setForeground(Color.BLACK);
    }//GEN-LAST:event_todayMouseExited

    private void todayMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_todayMousePressed
        today.setBackground(new Color(255, 255, 255));
        ttext.setForeground(Color.BLACK);
        jLabel9.setForeground(Color.BLACK);
    }//GEN-LAST:event_todayMousePressed

    private void todayMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_todayMouseReleased
        p = "2";
        confirm.setVisible(false);
        checkin.setVisible(false);
        today.setBackground(new Color(204, 204, 204));
        ttext.setForeground(Color.BLACK);
        jLabel9.setForeground(Color.BLACK);
        jLabel8.setText("Status");
        String today = showDate();
        try {
            String sql5 = "SELECT EquipmentId, EquipmentName, Qty, Date,SendDate,Time,Type, Status FROM eorderrecord where SendDate like '%" + today + "%' ";
            pst = con.prepareStatement(sql5);
            rs = pst.executeQuery();

            OrderTable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_todayMouseReleased

    private void allMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allMouseEntered
        all.setBackground(new Color(51, 51, 51));
        atext.setForeground(Color.white);
        jLabel10.setForeground(Color.white);
    }//GEN-LAST:event_allMouseEntered

    private void allMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allMouseExited
        all.setBackground(new Color(204, 204, 204));
        atext.setForeground(Color.BLACK);
        jLabel10.setForeground(Color.BLACK);
    }//GEN-LAST:event_allMouseExited

    private void allMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allMousePressed
        all.setBackground(new Color(255, 255, 255));
        atext.setForeground(Color.BLACK);
        jLabel10.setForeground(Color.BLACK);
    }//GEN-LAST:event_allMousePressed

    private void allMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allMouseReleased
        p = "3";
        vieworedr();
        confirm.setVisible(false);
        checkin.setVisible(false);
        all.setBackground(new Color(204, 204, 204));
        atext.setForeground(Color.BLACK);
        jLabel10.setForeground(Color.white);
    }//GEN-LAST:event_allMouseReleased

    private void eventMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventMouseEntered
        event.setBackground(new Color(51, 51, 51));
        otext.setForeground(Color.white);
    }//GEN-LAST:event_eventMouseEntered

    private void eventMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventMouseExited
        event.setBackground(new Color(204, 204, 204));
        otext.setForeground(Color.BLACK);
    }//GEN-LAST:event_eventMouseExited

    private void eventMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventMousePressed
        event.setBackground(new Color(255, 255, 255));
        otext.setForeground(Color.BLACK);
    }//GEN-LAST:event_eventMousePressed

    private void eventMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventMouseReleased
        p = "1";
        equipmentoredr();
        confirm.setVisible(true);
        checkin.setVisible(false);
        event.setBackground(new Color(204, 204, 204));
        otext.setForeground(Color.BLACK);
    }//GEN-LAST:event_eventMouseReleased

    private void nameboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameboxKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String sname = namebox.getText();
            try {
                String sql1 = "SELECT EquipmentId,Qty FROM equipmet WHERE EquipmentName ='" + sname + "' ";
                pst = con.prepareStatement(sql1);
                rs = pst.executeQuery();
                if (rs.next()) {
                    idbox.setText(rs.getString("EquipmentId"));
                    qavailability.setText(rs.getString("Qty"));
                    qtybox.requestFocusInWindow();
                } else {
                    JOptionPane.showMessageDialog(null, "Not match");
                }
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }//GEN-LAST:event_nameboxKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (p.equals("1")) {
            try {
                    String date = showDate();
                    JasperDesign jd = JRXmlLoader.load("C:\\Users\\MUNESH\\Documents\\NetBeansProjects\\itp_new_template\\ireport\\equipmentorder.jrxml");
                    String sql = "select * from equipmentorder where Date like '%" + date + "%'";
                    JRDesignQuery n1 = new JRDesignQuery();
                    n1.setText(sql);
                    jd.setQuery(n1);
                    JasperReport jr = JasperCompileManager.compileReport(jd);
                    JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
                    JasperViewer.viewReport(jp);
                } catch (JRException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
        } else if (p.equals("2")) {
            try {
                    String date = showDate();
                    JasperDesign jd = JRXmlLoader.load("C:\\Users\\MUNESH\\Documents\\NetBeansProjects\\itp_new_template\\ireport\\eorderrecord.jrxml");
                    String sql = "select * from eorderrecord where SendDate like '%" + date + "%'";
                    JRDesignQuery n1 = new JRDesignQuery();
                    n1.setText(sql);
                    jd.setQuery(n1);
                    JasperReport jr = JasperCompileManager.compileReport(jd);
                    JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
                    JasperViewer.viewReport(jp);
                } catch (JRException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
        } else if (p.equals("3")) {
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            Date bdate;
            bdate = sdate.getDate();
            if (bdate==null) {
                try {
                    String rep = "C:\\Users\\MUNESH\\Documents\\NetBeansProjects\\itp_new_template\\ireport\\eorderrecord.jrxml";
                    JasperReport jr = JasperCompileManager.compileReport(rep);
                    JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
                    JasperViewer.viewReport(jp);
                } catch (JRException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
            } else {
                try {
                    String date = df.format(bdate);
                    JasperDesign jd = JRXmlLoader.load("C:\\Users\\MUNESH\\Documents\\NetBeansProjects\\itp_new_template\\ireport\\eorderrecord.jrxml");
                    String sql = "select * from eorderrecord where SendDate like '%" + date + "%'";
                    JRDesignQuery n1 = new JRDesignQuery();
                    n1.setText(sql);
                    jd.setQuery(n1);
                    JasperReport jr = JasperCompileManager.compileReport(jd);
                    JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
                    JasperViewer.viewReport(jp);
                } catch (JRException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
            }
        }
        else{
            try {
                    String rep = "C:\\Users\\MUNESH\\Documents\\NetBeansProjects\\itp_new_template\\ireport\\equipmentout.jrxml";
                    JasperReport jr = JasperCompileManager.compileReport(rep);
                    JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
                    JasperViewer.viewReport(jp);
                } catch (JRException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    String showDate() {
        java.util.Date d = new java.util.Date();
        SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd");
        return (s.format(d));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable OrderTable;
    private javax.swing.JPanel all;
    private javax.swing.JLabel atext;
    private javax.swing.JPanel check;
    private javax.swing.JButton checkin;
    private javax.swing.JButton clear;
    private javax.swing.JButton confirm;
    private javax.swing.JLabel ctext;
    private com.toedter.calendar.JDateChooser datebox;
    private javax.swing.JPanel event;
    private javax.swing.JLabel idbox;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField namebox;
    private javax.swing.JLabel otext;
    private javax.swing.JLabel qavailability;
    private javax.swing.JTextField qtybox;
    private com.toedter.calendar.JDateChooser sdate;
    private javax.swing.JButton search;
    private javax.swing.JLabel statusbox;
    private javax.swing.JComboBox<String> timebox;
    private javax.swing.JPanel today;
    private javax.swing.JLabel ttext;
    private javax.swing.JComboBox<String> typebox;
    // End of variables declaration//GEN-END:variables
}
