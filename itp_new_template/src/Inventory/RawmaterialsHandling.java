/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Inventory;

import com.mxrck.autocompleter.TextAutoCompleter;
import dbconnect.dbconnect;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.util.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.JTableHeader;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

public class RawmaterialsHandling extends javax.swing.JInternalFrame {

    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    Inventory i = new Inventory();
    String p="1";

    public RawmaterialsHandling() {
        initComponents();

        con = dbconnect.connect();
        dailytable();
        item();
        JTableHeader header = OrderTable.getTableHeader();
        header.setFont(new Font("Tahoma", Font.BOLD, 14));
    }

    public void dailytable() {
        String today = showDate();
        try {
            String sql = "SELECT ItemId, ItemName, Qty, RequiredDate,Type, Status FROM dailyorder WHERE Status ='Not send' AND RequiredDate = '" + today + "'";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

            OrderTable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void eventtable() {
        String today = showDate();
        try {
            String sql = "SELECT ItemId, ItemName, Qty, RequiredDate, Type, Status FROM eventorder WHERE Status='Not send' AND RequiredDate='" + today + "' ";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

            OrderTable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void viewttable() {
        try {
            String sql = "SELECT ItemId, ItemName, Qty, Date, SendDate, Type, Status FROM orderrecord where Status like 'Send'";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

            OrderTable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void item() {
        TextAutoCompleter text = new TextAutoCompleter(namebox);

        try {
            String sql = "SELECT ItemName FROM rawmaterials";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            String n;
            while (rs.next()) {
                n = rs.getString("ItemName");
                text.addItem(n);
            }
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        OrderTable = new javax.swing.JTable();
        statusbox = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        date = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        qtybox = new javax.swing.JTextField();
        namebox = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        typebox = new javax.swing.JComboBox<>();
        datebox = new com.toedter.calendar.JDateChooser();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        confirm = new javax.swing.JButton();
        sdate = new com.toedter.calendar.JDateChooser();
        idbox = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        all = new javax.swing.JPanel();
        atext = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        today = new javax.swing.JPanel();
        ttext = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        event = new javax.swing.JPanel();
        etext = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        daily = new javax.swing.JPanel();
        dtext = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ramount = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setBorder(null);
        setMinimumSize(new java.awt.Dimension(1600, 920));
        setPreferredSize(new java.awt.Dimension(1600, 920));
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        OrderTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        OrderTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        OrderTable.setFillsViewportHeight(true);
        OrderTable.setGridColor(new java.awt.Color(204, 204, 204));
        OrderTable.setRowHeight(30);
        OrderTable.setSelectionBackground(new java.awt.Color(102, 102, 102));
        OrderTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrderTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(OrderTable);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 280, 1100, 570);

        statusbox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        statusbox.setText("Not send");
        jPanel1.add(statusbox);
        statusbox.setBounds(1280, 680, 280, 40);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Status");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(1150, 690, 50, 22);

        date.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        date.setText("Date");
        jPanel1.add(date);
        date.setBounds(1150, 570, 36, 22);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Amount");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(1150, 510, 80, 22);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Item Name");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(1150, 450, 88, 22);

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Item Id");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(1150, 390, 60, 22);

        qtybox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        qtybox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                qtyboxActionPerformed(evt);
            }
        });
        qtybox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                qtyboxKeyPressed(evt);
            }
        });
        jPanel1.add(qtybox);
        qtybox.setBounds(1280, 500, 210, 40);

        namebox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        namebox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameboxActionPerformed(evt);
            }
        });
        namebox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameboxKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nameboxKeyReleased(evt);
            }
        });
        jPanel1.add(namebox);
        namebox.setBounds(1280, 440, 290, 40);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Type");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(1150, 630, 39, 22);

        typebox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        typebox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Restaurant", "Wedding", "Party", "Other" }));
        jPanel1.add(typebox);
        typebox.setBounds(1280, 620, 290, 40);

        datebox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        datebox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                dateboxKeyPressed(evt);
            }
        });
        jPanel1.add(datebox);
        datebox.setBounds(1280, 560, 290, 40);

        jButton3.setBackground(new java.awt.Color(255, 255, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/clear.png"))); // NOI18N
        jButton3.setText("Clear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(1450, 800, 120, 50);

        jButton5.setBackground(new java.awt.Color(255, 255, 255));
        jButton5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/search.png"))); // NOI18N
        jButton5.setText("Search");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5);
        jButton5.setBounds(730, 210, 120, 50);

        confirm.setBackground(new java.awt.Color(255, 255, 255));
        confirm.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        confirm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/confirm.png"))); // NOI18N
        confirm.setText("Confirm");
        confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmActionPerformed(evt);
            }
        });
        jPanel1.add(confirm);
        confirm.setBounds(1150, 800, 120, 50);

        sdate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(sdate);
        sdate.setBounds(340, 220, 310, 40);

        idbox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        idbox.setForeground(new java.awt.Color(0, 204, 51));
        jPanel1.add(idbox);
        idbox.setBounds(1280, 380, 280, 40);

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/textfield300.png"))); // NOI18N
        jLabel9.setText(" ");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(1280, 680, 300, 40);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/textfield300.png"))); // NOI18N
        jLabel10.setText(" ");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(1270, 380, 300, 40);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/print.png"))); // NOI18N
        jButton1.setText("Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(1010, 210, 120, 50);

        all.setBackground(new java.awt.Color(204, 204, 204));
        all.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        all.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        all.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                allMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                allMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                allMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                allMouseReleased(evt);
            }
        });
        all.setLayout(null);

        atext.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        atext.setText("View all send items");
        all.add(atext);
        atext.setBounds(80, 20, 160, 30);

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/send.png"))); // NOI18N
        jLabel17.setText(" ");
        all.add(jLabel17);
        jLabel17.setBounds(10, 0, 64, 64);

        jPanel1.add(all);
        all.setBounds(990, 40, 250, 70);

        today.setBackground(new java.awt.Color(204, 204, 204));
        today.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        today.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        today.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                todayMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                todayMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                todayMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                todayMouseReleased(evt);
            }
        });
        today.setLayout(null);

        ttext.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ttext.setText("View today send ");
        today.add(ttext);
        ttext.setBounds(80, 10, 140, 30);

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/send.png"))); // NOI18N
        jLabel16.setText(" ");
        today.add(jLabel16);
        jLabel16.setBounds(10, 0, 64, 64);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Items");
        today.add(jLabel5);
        jLabel5.setBounds(80, 30, 60, 30);

        jPanel1.add(today);
        today.setBounds(670, 40, 250, 70);

        event.setBackground(new java.awt.Color(204, 204, 204));
        event.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        event.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        event.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                eventMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                eventMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                eventMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                eventMouseReleased(evt);
            }
        });
        event.setLayout(null);

        etext.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        etext.setText("Event Ordered items");
        event.add(etext);
        etext.setBounds(80, 20, 170, 30);

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/eve.png"))); // NOI18N
        jLabel15.setText(" ");
        event.add(jLabel15);
        jLabel15.setBounds(10, 0, 64, 64);

        jPanel1.add(event);
        event.setBounds(350, 40, 250, 70);

        daily.setBackground(new java.awt.Color(204, 204, 204));
        daily.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        daily.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        daily.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dailyMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                dailyMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                dailyMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                dailyMouseReleased(evt);
            }
        });
        daily.setLayout(null);

        dtext.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        dtext.setText("Daily Ordered items");
        daily.add(dtext);
        dtext.setBounds(80, 20, 160, 30);

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/fstock.png"))); // NOI18N
        jLabel14.setText(" ");
        daily.add(jLabel14);
        jLabel14.setBounds(10, 0, 64, 64);

        jPanel1.add(daily);
        daily.setBounds(30, 40, 250, 70);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/textfield3.png"))); // NOI18N
        jPanel1.add(jLabel8);
        jLabel8.setBounds(1500, 500, 70, 40);

        ramount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ramount.setForeground(new java.awt.Color(0, 153, 51));
        ramount.setText(" ");
        jPanel1.add(ramount);
        ramount.setBounds(1500, 500, 70, 40);

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/body.jpg"))); // NOI18N
        jLabel4.setText(" ");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(0, 0, 1600, 890);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(-1, -1, 1600, 890);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void OrderTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrderTableMouseClicked

        int row = OrderTable.getSelectedRow();
        String itemid = OrderTable.getValueAt(row, 0).toString();
        String itemname = OrderTable.getValueAt(row, 1).toString();
        String qty = OrderTable.getValueAt(row, 2).toString();
        String date = OrderTable.getValueAt(row, 3).toString();
        String type = OrderTable.getValueAt(row, 4).toString();
        String status = OrderTable.getValueAt(row, 5).toString();
        try {
            idbox.setText(itemid);
            namebox.setText(itemname);
            qtybox.setText(qty);
            Date edate = new SimpleDateFormat("yyyy-MM-dd").parse((String) date);
            datebox.setDate(edate);
            typebox.setSelectedItem(type);
            statusbox.setText(status);
        } catch (Exception e) {

        }
        try {
            String sql1 = "SELECT ItemId,Amount FROM rawmaterials WHERE ItemName ='" + itemname + "' AND (Status ='Good' OR Status='Today Expire' OR Status='Ex 1 Day' OR Status='Ex 2 Days')";
            pst = con.prepareStatement(sql1);
            rs = pst.executeQuery();
            if (rs.next()) {
                idbox.setText(rs.getString("ItemId"));
                ramount.setText(rs.getString("Amount"));
                qtybox.requestFocusInWindow();
            } else {
                JOptionPane.showMessageDialog(null, "Not match or Expired");
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_OrderTableMouseClicked

    private void qtyboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_qtyboxKeyPressed

    }//GEN-LAST:event_qtyboxKeyPressed

    private void nameboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameboxKeyPressed

    }//GEN-LAST:event_nameboxKeyPressed

    private void dateboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_dateboxKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            typebox.requestFocusInWindow();
        }
    }//GEN-LAST:event_dateboxKeyPressed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        Date edate;
        edate = sdate.getDate();
        String search = df.format(edate);
        rs = i.rawhandlingsearch(search);
        OrderTable.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_jButton5ActionPerformed

    private void confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmActionPerformed
        float eqty = 0;
        String nqty;
        float evalue = 0;
        String value;
        float rate = 0;
        String itemid = idbox.getText();
        String itemname = namebox.getText();
        String qty = qtybox.getText();
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");

        if (itemid.isEmpty() || itemname.isEmpty() || qty.isEmpty() || df == null) {
            JOptionPane.showMessageDialog(null, "Please fill details");
        } else {
            Date edate;
            edate = datebox.getDate();
            String date = df.format(edate);
            String type = typebox.getSelectedItem().toString();
            String status = "Not send";
            status = statusbox.getText();
            String senddate = showDate();
            float no1 = Float.parseFloat(qty);
            String exstate = "Expired";
            try {
                String sql1 = "SELECT Amount,TotalValue,Rate,Status FROM rawmaterials WHERE ItemId like '" + itemid + "' ";
                pst = con.prepareStatement(sql1);
                rs = pst.executeQuery();
                if (rs.next()) {
                    eqty = Float.parseFloat(rs.getString("Amount"));
                    evalue = Float.parseFloat(rs.getString("TotalValue"));
                    rate = Float.parseFloat(rs.getString("Rate"));
                    exstate = rs.getString("Status");
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }

            value = Float.toString(evalue - (rate * Float.parseFloat(qty)));
            nqty = Float.toString(eqty - Float.parseFloat(qty));
            if ((exstate.equals("Good")||exstate.equals("Today Expire")||exstate.equals("Ex 2 Days")||exstate.equals("Ex 1 Day")) && eqty >= Float.parseFloat(qty)) {
                if (status.equals("Not send")) {
                    int x = JOptionPane.showConfirmDialog(null, "Do You want confirm");
                    if (x == 0) {
                        if (type.equals("Restaurant")) {
                            i.rawhandlingresconfirm(itemid, nqty, value, itemname, qty, date, senddate, type);
                            dailytable();
                        } else if (type.equals("Party") || type.equals("Wedding")) {
                            i.rawhandlingwedconfirm(itemid, nqty, value, itemname, qty, date, senddate, type);
                            eventtable();
                        }
                        idbox.setText("");
                        namebox.setText("");
                        qtybox.setText("");
                        datebox.setDate(null);
                        typebox.setSelectedIndex(0);
                        statusbox.setText("");
                        ramount.setText("");
                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Order alredy send");
                }
            } else {
                JOptionPane.showMessageDialog(null, "Item Expired or Out of stock");
            }
        }

    }//GEN-LAST:event_confirmActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        idbox.setText("");
        namebox.setText("");
        qtybox.setText("");
        datebox.setDate(null);
        typebox.setSelectedIndex(0);
        statusbox.setText("");
        ramount.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed

    private void nameboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameboxActionPerformed

    private void qtyboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_qtyboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_qtyboxActionPerformed

    private void dailyMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dailyMouseEntered
        daily.setBackground(new Color(51, 51, 51));
        dtext.setForeground(Color.white);
    }//GEN-LAST:event_dailyMouseEntered

    private void dailyMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dailyMouseExited
        daily.setBackground(new Color(204, 204, 204));
        dtext.setForeground(Color.BLACK);
    }//GEN-LAST:event_dailyMouseExited

    private void dailyMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dailyMousePressed
        daily.setBackground(new Color(255, 255, 255));
        dtext.setForeground(Color.BLACK);
    }//GEN-LAST:event_dailyMousePressed

    private void dailyMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dailyMouseReleased
        p="1";
        dailytable();
        confirm.setVisible(true);
        daily.setBackground(new Color(204, 204, 204));
        dtext.setForeground(Color.BLACK);
    }//GEN-LAST:event_dailyMouseReleased

    private void eventMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventMouseEntered
        event.setBackground(new Color(51, 51, 51));
        etext.setForeground(Color.white);
    }//GEN-LAST:event_eventMouseEntered

    private void eventMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventMouseExited
        event.setBackground(new Color(204, 204, 204));
        etext.setForeground(Color.BLACK);
    }//GEN-LAST:event_eventMouseExited

    private void eventMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventMousePressed
        event.setBackground(new Color(255, 255, 255));
        etext.setForeground(Color.BLACK);
    }//GEN-LAST:event_eventMousePressed

    private void eventMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventMouseReleased
        p="2";
        event.setBackground(new Color(204, 204, 204));
        etext.setForeground(Color.BLACK);
        eventtable();
        confirm.setVisible(true);
    }//GEN-LAST:event_eventMouseReleased

    private void todayMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_todayMouseEntered
        today.setBackground(new Color(51, 51, 51));
        ttext.setForeground(Color.white);
        jLabel5.setForeground(Color.white);
    }//GEN-LAST:event_todayMouseEntered

    private void todayMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_todayMouseExited
        today.setBackground(new Color(204, 204, 204));
        ttext.setForeground(Color.BLACK);
        jLabel5.setForeground(Color.BLACK);
    }//GEN-LAST:event_todayMouseExited

    private void todayMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_todayMousePressed
        today.setBackground(new Color(255, 255, 255));
        ttext.setForeground(Color.BLACK);
        jLabel5.setForeground(Color.BLACK);
    }//GEN-LAST:event_todayMousePressed

    private void todayMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_todayMouseReleased
        p = "3";
        today.setBackground(new Color(204, 204, 204));
        ttext.setForeground(Color.BLACK);
        jLabel5.setForeground(Color.BLACK);
        confirm.setVisible(false);
        String today = showDate();
        try {
            String sql5 = "SELECT ItemId, ItemName, Qty, Date,SendDate,Type, Status FROM orderrecord where SendDate like '%" + today + "%' ";
            pst = con.prepareStatement(sql5);
            rs = pst.executeQuery();

            OrderTable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_todayMouseReleased

    private void allMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allMouseEntered
        all.setBackground(new Color(51, 51, 51));
        atext.setForeground(Color.white);
    }//GEN-LAST:event_allMouseEntered

    private void allMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allMouseExited
        all.setBackground(new Color(204, 204, 204));
        atext.setForeground(Color.BLACK);
    }//GEN-LAST:event_allMouseExited

    private void allMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allMousePressed
        all.setBackground(new Color(255, 255, 255));
        atext.setForeground(Color.BLACK);
    }//GEN-LAST:event_allMousePressed

    private void allMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_allMouseReleased
        p = "4";
        all.setBackground(new Color(204, 204, 204));
        atext.setForeground(Color.BLACK);
        viewttable();
        confirm.setVisible(false);
    }//GEN-LAST:event_allMouseReleased

    private void nameboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameboxKeyReleased

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            String sname = namebox.getText();
            try {
                String sql1 = "SELECT ItemId,Amount FROM rawmaterials WHERE ItemName ='" + sname + "' AND (Status ='Good' OR Status='Today Expire' OR Status='Ex 1 Day' OR Status='Ex 2 Days')";
                pst = con.prepareStatement(sql1);
                rs = pst.executeQuery();
                if (rs.next()) {
                    idbox.setText(rs.getString("ItemId"));
                    ramount.setText(rs.getString("Amount"));
                    qtybox.requestFocusInWindow();
                } else {
                    JOptionPane.showMessageDialog(null, "Not match or Expired");
                }
            } catch (Exception e) {
                System.out.println(e);
            }

        }
    }//GEN-LAST:event_nameboxKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(p.equals("1"))
        {
            try {
                    String date = showDate();
                    JasperDesign jd = JRXmlLoader.load("C:\\Users\\MUNESH\\Documents\\NetBeansProjects\\itp_new_template\\ireport\\dailyorder.jrxml");
                    String sql = "select * from dailyorder where RequiredDate like '%" + date + "%'";
                    JRDesignQuery n1 = new JRDesignQuery();
                    n1.setText(sql);
                    jd.setQuery(n1);
                    JasperReport jr = JasperCompileManager.compileReport(jd);
                    JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
                    JasperViewer.viewReport(jp);
                } catch (JRException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
        }
        else if(p.equals("2")){
            try {
                    String date = showDate();
                    JasperDesign jd = JRXmlLoader.load("C:\\Users\\MUNESH\\Documents\\NetBeansProjects\\itp_new_template\\ireport\\eventorder.jrxml");
                    String sql = "select * from eventorder where RequiredDate like '%" + date + "%'";
                    JRDesignQuery n1 = new JRDesignQuery();
                    n1.setText(sql);
                    jd.setQuery(n1);
                    JasperReport jr = JasperCompileManager.compileReport(jd);
                    JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
                    JasperViewer.viewReport(jp);
                } catch (JRException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
        }
        else if (p.equals("3")) {
            try {
                    String date = showDate();
                    JasperDesign jd = JRXmlLoader.load("C:\\Users\\MUNESH\\Documents\\NetBeansProjects\\itp_new_template\\ireport\\orderrecord.jrxml");
                    String sql = "select * from orderrecord where SendDate like '%" + date + "%'";
                    JRDesignQuery n1 = new JRDesignQuery();
                    n1.setText(sql);
                    jd.setQuery(n1);
                    JasperReport jr = JasperCompileManager.compileReport(jd);
                    JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
                    JasperViewer.viewReport(jp);
                } catch (JRException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
        } else if(p.equals("4")){
            DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
            Date bdate;
            bdate = sdate.getDate();
            if (bdate == null) {
                try {
                    String rep = "C:\\Users\\MUNESH\\Documents\\NetBeansProjects\\itp_new_template\\ireport\\orderrecord.jrxml";
                    JasperReport jr = JasperCompileManager.compileReport(rep);
                    JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
                    JasperViewer.viewReport(jp);
                } catch (JRException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
            } else {
                try {
                    String date = df.format(bdate);
                    JasperDesign jd = JRXmlLoader.load("C:\\Users\\MUNESH\\Documents\\NetBeansProjects\\itp_new_template\\ireport\\orderrecord.jrxml");
                    String sql = "select * from orderrecord where SendDate like '%" + date + "%'";
                    JRDesignQuery n1 = new JRDesignQuery();
                    n1.setText(sql);
                    jd.setQuery(n1);
                    JasperReport jr = JasperCompileManager.compileReport(jd);
                    JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
                    JasperViewer.viewReport(jp);
                } catch (JRException ex) {
                    JOptionPane.showMessageDialog(null, ex);
                }
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    String showDate() {
        java.util.Date d = new java.util.Date();
        SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd");
        return (s.format(d));
    }

    public boolean itemidcheck(String raname) {
        boolean status = true;
        String today = showDate();
        try {
            String sql = "SELECT ItemId FROM rawmaterials WHERE ItemName like '" + raname + "' ";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            if (rs.next()) {
                status = true;
            } else {
                status = false;
            }
        } catch (Exception e) {
        }
        return status;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable OrderTable;
    private javax.swing.JPanel all;
    private javax.swing.JLabel atext;
    private javax.swing.JButton confirm;
    private javax.swing.JPanel daily;
    private javax.swing.JLabel date;
    private com.toedter.calendar.JDateChooser datebox;
    private javax.swing.JLabel dtext;
    private javax.swing.JLabel etext;
    private javax.swing.JPanel event;
    private javax.swing.JLabel idbox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField namebox;
    private javax.swing.JTextField qtybox;
    private javax.swing.JLabel ramount;
    private com.toedter.calendar.JDateChooser sdate;
    private javax.swing.JLabel statusbox;
    private javax.swing.JPanel today;
    private javax.swing.JLabel ttext;
    private javax.swing.JComboBox<String> typebox;
    // End of variables declaration//GEN-END:variables
}
