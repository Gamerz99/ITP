/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Inventory;

import com.mxrck.autocompleter.TextAutoCompleter;
import dbconnect.dbconnect;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.JTableHeader;
import net.proteanit.sql.DbUtils;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JRDesignQuery;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author MUNESH
 */
public class RawmeterialsStock extends javax.swing.JInternalFrame {

    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    Inventory i = new Inventory();

    public RawmeterialsStock() {
        initComponents();
        con = dbconnect.connect();

        search();
        viewtable();
        JTableHeader theader = rawtable.getTableHeader();
        theader.setFont(new Font("Tahoma", Font.BOLD, 14));
    }

    public void viewtable() {
        searchbox.setText("");
        try {
            String sql = "UPDATE rawmaterials SET Status='Expired' WHERE ExpireDate <'" + showDate() + "'";
            pst = con.prepareStatement(sql);
            pst.execute();
        } catch (Exception e) {
            System.out.println(e);
        }
        try {
            String sql = "UPDATE rawmaterials SET Status='Good' WHERE ExpireDate >='" + showDate() + "'";
            pst = con.prepareStatement(sql);
            pst.execute();
        } catch (Exception e) {
            System.out.println(e);
        }
        try {
            String sql = "UPDATE rawmaterials SET Status='Today Expire' WHERE DATEDIFF(ExpireDate,'" + showDate() + "')=0";
            String sq2 = "UPDATE rawmaterials SET Status='Ex 1 Day' WHERE DATEDIFF(ExpireDate,'" + showDate() + "')=1";
            String sq3 = "UPDATE rawmaterials SET Status='Ex 2 Days' WHERE DATEDIFF(ExpireDate,'" + showDate() + "')=2";
            pst = con.prepareStatement(sql);
            pst.execute();
            pst = con.prepareStatement(sq2);
            pst.execute();
            pst = con.prepareStatement(sq3);
            pst.execute();
        } catch (Exception e) {
            System.out.println(e);
        }
        try {
            String sql = "SELECT * FROM rawmaterials ORDER BY Status desc";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

            rawtable.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (Exception e) {
            System.out.println(e);
        }
    }

    public void search() {
        TextAutoCompleter text = new TextAutoCompleter(searchbox);

        try {
            String sql = "SELECT ItemName FROM rawmaterials";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            String n;
            while (rs.next()) {
                n = rs.getString("ItemName");
                text.addItem(n);
            }
        } catch (Exception e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        searchbox = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        rawtable = new javax.swing.JTable();
        valuebox = new javax.swing.JLabel();
        supidbox = new javax.swing.JLabel();
        ratebox = new javax.swing.JTextField();
        amountbox = new javax.swing.JTextField();
        namebox = new javax.swing.JTextField();
        idbox = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        exdatebox = new com.toedter.calendar.JDateChooser();
        jLabel9 = new javax.swing.JLabel();
        reorderbox = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        search = new javax.swing.JButton();
        update = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        expired = new javax.swing.JPanel();
        etext = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        out = new javax.swing.JPanel();
        otext = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        avaliability = new javax.swing.JPanel();
        atext = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        fstock = new javax.swing.JPanel();
        stext = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();

        setBorder(null);
        setMinimumSize(new java.awt.Dimension(1600, 920));
        setPreferredSize(new java.awt.Dimension(1600, 920));
        getContentPane().setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        searchbox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        searchbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchboxKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                searchboxKeyReleased(evt);
            }
        });
        jPanel1.add(searchbox);
        searchbox.setBounds(300, 200, 320, 40);

        rawtable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rawtable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        rawtable.setFillsViewportHeight(true);
        rawtable.setGridColor(new java.awt.Color(204, 204, 204));
        rawtable.setRowHeight(30);
        rawtable.setSelectionBackground(new java.awt.Color(102, 102, 102));
        rawtable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rawtableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(rawtable);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 300, 1060, 550);

        valuebox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        valuebox.setText("  ");
        jPanel1.add(valuebox);
        valuebox.setBounds(1280, 680, 280, 40);

        supidbox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        supidbox.setText("  ");
        jPanel1.add(supidbox);
        supidbox.setBounds(1280, 330, 280, 40);

        ratebox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        ratebox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                rateboxKeyPressed(evt);
            }
        });
        jPanel1.add(ratebox);
        ratebox.setBounds(1270, 500, 300, 40);

        amountbox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        amountbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                amountboxKeyPressed(evt);
            }
        });
        jPanel1.add(amountbox);
        amountbox.setBounds(1270, 440, 300, 40);

        namebox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        namebox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nameboxKeyPressed(evt);
            }
        });
        jPanel1.add(namebox);
        namebox.setBounds(1270, 380, 300, 40);

        idbox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        idbox.setText(" ");
        jPanel1.add(idbox);
        idbox.setBounds(1280, 280, 280, 40);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Item Id");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(1110, 300, 60, 22);

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Item name");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(1110, 400, 86, 22);

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Amount(Kg)");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(1110, 460, 100, 22);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel7.setText("Rate(Rs)");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(1110, 520, 68, 22);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Reorder Level");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(1110, 580, 120, 22);

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Total value");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(1110, 700, 87, 22);

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setText("Supplier Id");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(1110, 350, 86, 22);

        exdatebox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel1.add(exdatebox);
        exdatebox.setBounds(1270, 620, 300, 40);

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Expire date");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(1110, 640, 88, 22);

        reorderbox.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        reorderbox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                reorderboxKeyPressed(evt);
            }
        });
        jPanel1.add(reorderbox);
        reorderbox.setBounds(1270, 560, 300, 40);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/textfield300.png"))); // NOI18N
        jLabel2.setText("    ");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(1270, 280, 300, 40);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/textfield300.png"))); // NOI18N
        jLabel3.setText("    ");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(1270, 680, 300, 40);

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/textfield300.png"))); // NOI18N
        jLabel11.setText("    ");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(1270, 330, 300, 40);

        search.setBackground(new java.awt.Color(255, 255, 255));
        search.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/search.png"))); // NOI18N
        search.setText("Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        jPanel1.add(search);
        search.setBounds(670, 190, 120, 50);

        update.setBackground(new java.awt.Color(255, 255, 255));
        update.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        update.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/update.png"))); // NOI18N
        update.setText("Update");
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });
        jPanel1.add(update);
        update.setBounds(1110, 800, 120, 50);

        jButton6.setBackground(new java.awt.Color(255, 255, 255));
        jButton6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/delete.png"))); // NOI18N
        jButton6.setText("Detele");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton6);
        jButton6.setBounds(1450, 800, 120, 50);

        expired.setBackground(new java.awt.Color(204, 204, 204));
        expired.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        expired.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        expired.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                expiredMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                expiredMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                expiredMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                expiredMouseReleased(evt);
            }
        });
        expired.setLayout(null);

        etext.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        etext.setText("Expired");
        expired.add(etext);
        etext.setBounds(100, 20, 140, 30);

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/expired.png"))); // NOI18N
        jLabel17.setText(" ");
        expired.add(jLabel17);
        jLabel17.setBounds(20, 0, 64, 64);

        jPanel1.add(expired);
        expired.setBounds(960, 40, 250, 70);

        out.setBackground(new java.awt.Color(204, 204, 204));
        out.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        out.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        out.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                outMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                outMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                outMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                outMouseReleased(evt);
            }
        });
        out.setLayout(null);

        otext.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        otext.setText("Out Of Stock");
        out.add(otext);
        otext.setBounds(100, 20, 140, 30);

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/out.png"))); // NOI18N
        jLabel16.setText(" ");
        out.add(jLabel16);
        jLabel16.setBounds(20, 0, 64, 64);

        jPanel1.add(out);
        out.setBounds(650, 40, 250, 70);

        avaliability.setBackground(new java.awt.Color(204, 204, 204));
        avaliability.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        avaliability.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        avaliability.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                avaliabilityMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                avaliabilityMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                avaliabilityMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                avaliabilityMouseReleased(evt);
            }
        });
        avaliability.setLayout(null);

        atext.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        atext.setText("View Avaliability");
        avaliability.add(atext);
        atext.setBounds(100, 20, 140, 30);

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/avialibility.png"))); // NOI18N
        jLabel15.setText(" ");
        avaliability.add(jLabel15);
        jLabel15.setBounds(20, 0, 64, 64);

        jPanel1.add(avaliability);
        avaliability.setBounds(340, 40, 250, 70);

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/print.png"))); // NOI18N
        jButton1.setText("Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(970, 190, 120, 50);

        fstock.setBackground(new java.awt.Color(204, 204, 204));
        fstock.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        fstock.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        fstock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                fstockMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                fstockMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                fstockMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                fstockMouseReleased(evt);
            }
        });
        fstock.setLayout(null);

        stext.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        stext.setText("Food Stock");
        fstock.add(stext);
        stext.setBounds(100, 20, 140, 30);

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/fstock.png"))); // NOI18N
        jLabel14.setText(" ");
        fstock.add(jLabel14);
        jLabel14.setBounds(20, 0, 64, 64);

        jPanel1.add(fstock);
        fstock.setBounds(30, 40, 250, 70);

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/body.jpg"))); // NOI18N
        jLabel12.setText(" ");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(0, 0, 1600, 890);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 1600, 890);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchboxKeyPressed

    }//GEN-LAST:event_searchboxKeyPressed

    private void rawtableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rawtableMouseClicked
        try {
            int row = rawtable.getSelectedRow();

            String itemid = rawtable.getValueAt(row, 0).toString();
            String sid = rawtable.getValueAt(row, 1).toString();
            String itemname = rawtable.getValueAt(row, 2).toString();
            String amount = rawtable.getValueAt(row, 3).toString();
            String rate = rawtable.getValueAt(row, 4).toString();
            String reorrder = rawtable.getValueAt(row, 5).toString();
            String exdate = rawtable.getValueAt(row, 6).toString();
            String value = rawtable.getValueAt(row, 7).toString();

            idbox.setText(itemid);
            supidbox.setText(sid);
            namebox.setText(itemname);
            amountbox.setText(amount);
            ratebox.setText(rate);
            reorderbox.setText(reorrder);
            Date edate = new SimpleDateFormat("yyyy-MM-dd").parse((String) exdate);
            exdatebox.setDate(edate);
            valuebox.setText(value);
        } catch (ParseException ex) {
            Logger.getLogger(RawmeterialsStock.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_rawtableMouseClicked

    private void rateboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_rateboxKeyPressed
        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            reorderbox.requestFocusInWindow();
        }
        if ((key >= evt.VK_0 && key <= evt.VK_9) || (key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || key == KeyEvent.VK_BACK_SPACE || key == KeyEvent.VK_PERIOD || key == KeyEvent.VK_ENTER || key == KeyEvent.VK_ENTER) {
            ratebox.setEditable(true);
            ratebox.setBackground(Color.white);
        } else {
            getToolkit().beep();
            ratebox.setEditable(false);
            ratebox.setBackground(Color.LIGHT_GRAY);
        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String amount = amountbox.getText();
            String rate = ratebox.getText();
            float no1 = Float.parseFloat(amount);
            float no2 = Float.parseFloat(rate);
            float result = no1 * no2;
            String nvalue = Float.toString(result);
            valuebox.setText(nvalue);
        }
    }//GEN-LAST:event_rateboxKeyPressed

    private void amountboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_amountboxKeyPressed
        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            ratebox.requestFocusInWindow();
        }
        if ((key >= evt.VK_0 && key <= evt.VK_9) || (key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || key == KeyEvent.VK_BACK_SPACE || key == KeyEvent.VK_PERIOD) {
            amountbox.setEditable(true);
            amountbox.setBackground(Color.white);
        } else {
            getToolkit().beep();
            amountbox.setEditable(false);
            amountbox.setBackground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_amountboxKeyPressed

    private void nameboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameboxKeyPressed
        int key = evt.getKeyCode();
        if (key == KeyEvent.VK_ENTER) {
            amountbox.requestFocusInWindow();
        }
    }//GEN-LAST:event_nameboxKeyPressed

    private void reorderboxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_reorderboxKeyPressed
        int key = evt.getKeyCode();
        if ((key >= evt.VK_0 && key <= evt.VK_9) || (key >= evt.VK_NUMPAD0 && key <= evt.VK_NUMPAD9) || key == KeyEvent.VK_BACK_SPACE || key == KeyEvent.VK_ENTER || key == KeyEvent.VK_PERIOD) {
            reorderbox.setEditable(true);
            reorderbox.setBackground(Color.white);
        } else {
            getToolkit().beep();
            reorderbox.setEditable(false);
            reorderbox.setBackground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_reorderboxKeyPressed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        String search = searchbox.getText();
        rs = i.rawsearch(search);
        rawtable.setModel(DbUtils.resultSetToTableModel(rs));
    }//GEN-LAST:event_searchActionPerformed

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
        String itemid = idbox.getText();
        String sid = supidbox.getText();
        String itemname = namebox.getText();
        String amount = amountbox.getText();
        String rate = ratebox.getText();
        String reorder = reorderbox.getText();
        DateFormat df = new SimpleDateFormat("yyyy-MM-dd");
        Date bdate;
        bdate = exdatebox.getDate();
        if (itemid.isEmpty() || sid.isEmpty() || itemname.isEmpty() || amount.isEmpty() || rate.isEmpty() || reorder.isEmpty() || bdate == null) {
            JOptionPane.showMessageDialog(null, "Please select item");
        } else {            
            String exdate = df.format(bdate);
            float no1 = Float.parseFloat(amount);
            float no2 = Float.parseFloat(rate);
            float result = no1 * no2;
            String nvalue = Float.toString(result);
            valuebox.setText(nvalue);       
            int x = JOptionPane.showConfirmDialog(null, "Do You really want to update");
            if (x == 0) {
                i.rawupdate(itemname, amount, rate, reorder, exdate, nvalue, itemid, sid);
                idbox.setText("");
                supidbox.setText("");
                namebox.setText("");
                amountbox.setText("");
                amountbox.setText("");
                ratebox.setText("");
                reorderbox.setText("");
                exdatebox.setDate(null);
                valuebox.setText("");

                viewtable();
            }
        }
    }//GEN-LAST:event_updateActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String itemid = idbox.getText();
        String sid = supidbox.getText();

        if (itemid.isEmpty() || sid.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please select item");
        } else {
            int x = JOptionPane.showConfirmDialog(null, "Do You want confirm");
            if (x == 0) {
                i.rawdelete(itemid, sid);
                idbox.setText("");
                supidbox.setText("");
                namebox.setText("");
                amountbox.setText("");
                ratebox.setText("");
                reorderbox.setText("");
                exdatebox.setDate(null);
                valuebox.setText("");
                viewtable();
            }
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void fstockMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fstockMouseReleased
        viewtable();
        fstock.setBackground(new Color(204, 204, 204));
        stext.setForeground(Color.BLACK);
    }//GEN-LAST:event_fstockMouseReleased

    private void fstockMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fstockMouseEntered
        fstock.setBackground(new Color(51, 51, 51));
        stext.setForeground(Color.white);
    }//GEN-LAST:event_fstockMouseEntered

    private void fstockMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fstockMouseExited
        fstock.setBackground(new Color(204, 204, 204));
        stext.setForeground(Color.BLACK);
    }//GEN-LAST:event_fstockMouseExited

    private void fstockMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fstockMousePressed
        fstock.setBackground(new Color(255, 255, 255));
        stext.setForeground(Color.BLACK);
    }//GEN-LAST:event_fstockMousePressed

    private void avaliabilityMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_avaliabilityMouseEntered
        avaliability.setBackground(new Color(51, 51, 51));
        atext.setForeground(Color.white);
    }//GEN-LAST:event_avaliabilityMouseEntered

    private void avaliabilityMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_avaliabilityMouseExited
        avaliability.setBackground(new Color(204, 204, 204));
        atext.setForeground(Color.black);
    }//GEN-LAST:event_avaliabilityMouseExited

    private void avaliabilityMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_avaliabilityMousePressed
        avaliability.setBackground(new Color(255, 255, 255));
        atext.setForeground(Color.BLACK);
    }//GEN-LAST:event_avaliabilityMousePressed

    private void avaliabilityMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_avaliabilityMouseReleased
        avaliability.setBackground(new Color(204, 204, 204));
        atext.setForeground(Color.BLACK);
        searchbox.setText("");
        try {
            String sql = "SELECT ItemId,ItemName,Amount,ReorderLevel,ExpireDate FROM rawmaterials  WHERE ExpireDate >'" + showDate() + "' ORDER BY Amount";
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

            rawtable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_avaliabilityMouseReleased

    private void outMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_outMouseEntered
        out.setBackground(new Color(51, 51, 51));
        otext.setForeground(Color.white);
    }//GEN-LAST:event_outMouseEntered

    private void outMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_outMouseExited
        out.setBackground(new Color(204, 204, 204));
        otext.setForeground(Color.black);
    }//GEN-LAST:event_outMouseExited

    private void outMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_outMousePressed
        out.setBackground(new Color(255, 255, 255));
        otext.setForeground(Color.BLACK);
    }//GEN-LAST:event_outMousePressed

    private void outMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_outMouseReleased
        out.setBackground(new Color(204, 204, 204));
        otext.setForeground(Color.BLACK);
        try {
            String sql1 = "SELECT * FROM rawmaterials WHERE ReorderLevel >= Amount";
            pst = con.prepareStatement(sql1);
            rs = pst.executeQuery();

            rawtable.setModel(DbUtils.resultSetToTableModel(rs));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_outMouseReleased

    private void expiredMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_expiredMouseEntered
        expired.setBackground(new Color(51, 51, 51));
        etext.setForeground(Color.white);
    }//GEN-LAST:event_expiredMouseEntered

    private void expiredMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_expiredMouseExited
        expired.setBackground(new Color(204, 204, 204));
        etext.setForeground(Color.black);
    }//GEN-LAST:event_expiredMouseExited

    private void expiredMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_expiredMousePressed
        expired.setBackground(new Color(255, 255, 255));
        etext.setForeground(Color.BLACK);
    }//GEN-LAST:event_expiredMousePressed

    private void expiredMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_expiredMouseReleased
        expired.setBackground(new Color(204, 204, 204));
        etext.setForeground(Color.BLACK);
        expired();
    }//GEN-LAST:event_expiredMouseReleased

    private void searchboxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchboxKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String search = searchbox.getText();
            rs = i.rawsearch(search);
            rawtable.setModel(DbUtils.resultSetToTableModel(rs));
        }
    }//GEN-LAST:event_searchboxKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String name = searchbox.getText();
        if (name.isEmpty()) {
            try {
                String rep = "C:\\Users\\MUNESH\\Documents\\NetBeansProjects\\itp_new_template\\ireport\\rawmaterials.jrxml";
                JasperReport jr = JasperCompileManager.compileReport(rep);
                JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
                JasperViewer.viewReport(jp);
            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        } else {
            try {

                JasperDesign jd = JRXmlLoader.load("C:\\Users\\MUNESH\\Documents\\NetBeansProjects\\itp_new_template\\ireport\\rawmaterials.jrxml");
                String sql = "select * from rawmaterials where ItemName like '%" + name + "%'";
                JRDesignQuery n1 = new JRDesignQuery();
                n1.setText(sql);
                jd.setQuery(n1);
                JasperReport jr = JasperCompileManager.compileReport(jd);
                JasperPrint jp = JasperFillManager.fillReport(jr, null, con);
                JasperViewer.viewReport(jp);
            } catch (JRException ex) {
                JOptionPane.showMessageDialog(null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    String showDate() {
        java.util.Date d = new java.util.Date();
        SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd");
        return (s.format(d));
    }

    public void expired() {
        try {
            String sql1 = "SELECT * FROM rawmaterials WHERE ExpireDate < '" + showDate() + "'";
            pst = con.prepareStatement(sql1);
            rs = pst.executeQuery();
            rawtable.setModel(DbUtils.resultSetToTableModel(rs));
            pst = con.prepareStatement(sql1);
            rs = pst.executeQuery();
            if (rs.next()) {
                JOptionPane.showMessageDialog(null, "This item shoud be detele");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountbox;
    private javax.swing.JLabel atext;
    private javax.swing.JPanel avaliability;
    private javax.swing.JLabel etext;
    private com.toedter.calendar.JDateChooser exdatebox;
    private javax.swing.JPanel expired;
    private javax.swing.JPanel fstock;
    private javax.swing.JLabel idbox;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField namebox;
    private javax.swing.JLabel otext;
    private javax.swing.JPanel out;
    private javax.swing.JTextField ratebox;
    private javax.swing.JTable rawtable;
    private javax.swing.JTextField reorderbox;
    private javax.swing.JButton search;
    private javax.swing.JTextField searchbox;
    private javax.swing.JLabel stext;
    private javax.swing.JLabel supidbox;
    private javax.swing.JButton update;
    private javax.swing.JLabel valuebox;
    // End of variables declaration//GEN-END:variables
}
