/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package customer;

import dbconnect.dbconnect;
import java.awt.Color;
import static java.lang.String.format;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author DELL
 */
public class Room_Reservation extends javax.swing.JInternalFrame {

    Connection con = null;
    PreparedStatement pst = null;
    ResultSet rs = null;
    private String No;

    public Room_Reservation() throws SQLException {
        initComponents();
        con = dbconnect.connect();

        check(501);
        check(502);
        check(503);
        check(504);
        check(505);
        check(506);
        check(507);
        check(508);

        image(501);
        image(502);
        image(503);
        image(504);
        image(505);
        image(506);
        image(507);
        image(508);
    }

    private void setColor() {
        String sql;
        sql = "Select * from booking where Status like 'Free'";
        try {
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            // jTable1.setModel(DbUtils.resultSetToTableModel(rs));
            rs.last();

        } catch (SQLException ex) {
            Logger.getLogger(Room_Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        no1box = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        box1 = new javax.swing.JLabel();
        box2 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        box4 = new javax.swing.JLabel();
        no3box = new javax.swing.JLabel();
        no1box1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        box3 = new javax.swing.JLabel();
        no6box = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        no7box = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        box7 = new javax.swing.JLabel();
        no4box = new javax.swing.JLabel();
        no8box = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        no2box = new javax.swing.JLabel();
        box6 = new javax.swing.JLabel();
        no5box = new javax.swing.JLabel();
        box = new javax.swing.JLabel();
        box5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        no505 = new javax.swing.JButton();
        no502 = new javax.swing.JButton();
        no503 = new javax.swing.JButton();
        no501 = new javax.swing.JButton();
        no508 = new javax.swing.JButton();
        no506 = new javax.swing.JButton();
        no504 = new javax.swing.JButton();
        no507 = new javax.swing.JButton();
        no509 = new javax.swing.JButton();
        no510 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setMinimumSize(new java.awt.Dimension(1600, 920));
        setPreferredSize(new java.awt.Dimension(1600, 920));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        no1box.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        getContentPane().add(no1box, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 120, 100, 50));

        jLabel12.setFont(new java.awt.Font("Calisto MT", 1, 18)); // NOI18N
        jLabel12.setText(" Room  No ");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 470, 110, 50));

        box1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(box1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, 320, 180));

        box2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(box2, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 170, 320, 180));

        jLabel23.setFont(new java.awt.Font("Calisto MT", 1, 18)); // NOI18N
        jLabel23.setText(" Room  No ");
        getContentPane().add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 120, 110, 50));

        box4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(box4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 520, 320, 180));

        no3box.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        getContentPane().add(no3box, new org.netbeans.lib.awtextra.AbsoluteConstraints(930, 120, 80, 50));

        no1box1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        getContentPane().add(no1box1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 130, 120, 90));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 25)); // NOI18N
        jLabel2.setText("    Room   Reservation.");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 10, 290, 70));

        box3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(box3, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 170, 320, 180));

        no6box.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        getContentPane().add(no6box, new org.netbeans.lib.awtextra.AbsoluteConstraints(940, 470, 90, 50));

        jLabel28.setFont(new java.awt.Font("Calisto MT", 1, 18)); // NOI18N
        jLabel28.setText(" Room  No ");
        getContentPane().add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 120, 100, 50));

        no7box.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        getContentPane().add(no7box, new org.netbeans.lib.awtextra.AbsoluteConstraints(1310, 120, 80, 50));

        jLabel13.setFont(new java.awt.Font("Calisto MT", 1, 18)); // NOI18N
        jLabel13.setText(" Room  No ");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 470, 120, 50));

        jLabel14.setFont(new java.awt.Font("Calisto MT", 1, 18)); // NOI18N
        jLabel14.setText(" Room  No  ");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 470, 120, 50));

        jLabel11.setFont(new java.awt.Font("Calisto MT", 1, 18)); // NOI18N
        jLabel11.setText(" Room  No ");
        getContentPane().add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 470, 120, 50));

        jLabel10.setFont(new java.awt.Font("Calisto MT", 1, 18)); // NOI18N
        jLabel10.setText(" Room  No ");
        getContentPane().add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 120, 120, 50));

        box7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(box7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1200, 170, 320, 180));

        no4box.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        getContentPane().add(no4box, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 470, 90, 50));

        no8box.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        getContentPane().add(no8box, new org.netbeans.lib.awtextra.AbsoluteConstraints(1320, 470, 80, 50));
        getContentPane().add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 200, 260, 120));

        no2box.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        getContentPane().add(no2box, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 120, 90, 50));

        box6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(box6, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 520, 320, 180));

        no5box.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        getContentPane().add(no5box, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 470, 90, 50));

        box.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(box, new org.netbeans.lib.awtextra.AbsoluteConstraints(1210, 520, 320, 180));

        box5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        getContentPane().add(box5, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 520, 320, 180));

        jLabel9.setFont(new java.awt.Font("Calisto MT", 1, 18)); // NOI18N
        jLabel9.setText(" Room  No   ");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 110, 50));

        no505.setBackground(new java.awt.Color(204, 204, 0));
        no505.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                no505ActionPerformed(evt);
            }
        });
        getContentPane().add(no505, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 470, 360, 270));

        no502.setBackground(new java.awt.Color(204, 204, 0));
        no502.setBorder(null);
        no502.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                no502ActionPerformed(evt);
            }
        });
        getContentPane().add(no502, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 120, 360, 270));

        no503.setBackground(new java.awt.Color(204, 204, 0));
        no503.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        no503.setBorder(null);
        no503.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                no503ActionPerformed(evt);
            }
        });
        getContentPane().add(no503, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 120, 360, 270));

        no501.setBackground(new java.awt.Color(204, 204, 0));
        no501.setBorder(null);
        no501.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                no501ActionPerformed(evt);
            }
        });
        getContentPane().add(no501, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 360, 270));

        no508.setBackground(new java.awt.Color(204, 204, 0));
        no508.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                no508ActionPerformed(evt);
            }
        });
        getContentPane().add(no508, new org.netbeans.lib.awtextra.AbsoluteConstraints(1190, 470, 360, 270));

        no506.setBackground(new java.awt.Color(204, 204, 0));
        no506.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                no506ActionPerformed(evt);
            }
        });
        getContentPane().add(no506, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 470, 360, 270));

        no504.setBackground(new java.awt.Color(255, 102, 102));
        no504.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                no504ActionPerformed(evt);
            }
        });
        getContentPane().add(no504, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 470, 360, 270));

        no507.setBackground(new java.awt.Color(204, 204, 0));
        no507.setBorder(null);
        no507.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                no507ActionPerformed(evt);
            }
        });
        getContentPane().add(no507, new org.netbeans.lib.awtextra.AbsoluteConstraints(1180, 120, 360, 270));

        no509.setBackground(new java.awt.Color(255, 102, 102));
        no509.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                no509ActionPerformed(evt);
            }
        });
        getContentPane().add(no509, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 470, 360, 270));

        no510.setBackground(new java.awt.Color(204, 204, 0));
        no510.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        no510.setBorder(null);
        no510.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                no510ActionPerformed(evt);
            }
        });
        getContentPane().add(no510, new org.netbeans.lib.awtextra.AbsoluteConstraints(800, 120, 360, 270));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Inventory/imgs/body.jpg"))); // NOI18N
        jLabel1.setText(" ");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1580, 880));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void no505ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_no505ActionPerformed
        String sql;
        sql = "Select * from room where status='Free' and RoomNo= 505 ";
        try {
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

        } catch (SQLException ex) {
            Logger.getLogger(Room_Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            if (rs.next()) {
                CustomerHome h = new CustomerHome();
                h.setVisible(true);
                h.jDesktopPane1.removeAll();
                Reservation an1 = new Reservation("505", "5000");
                h.jDesktopPane1.add(an1);
                an1.show();
            } else {

                JOptionPane.showMessageDialog(this, "Can not reserve.Because it is not available at the moment");

            }
        } catch (SQLException ex) {
            Logger.getLogger(Room_Reservation.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Room_Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_no505ActionPerformed

    private void no502ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_no502ActionPerformed
        String sql;
        sql = "Select * from room where status='Free' and RoomNo= 502 ";
        try {
            pst = con.prepareStatement(sql);
        } catch (SQLException ex) {
            Logger.getLogger(Room_Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            rs = pst.executeQuery();
        } catch (SQLException ex) {
            Logger.getLogger(Room_Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            if (rs.next()) {
                CustomerHome h = new CustomerHome();
                h.setVisible(true);
                h.jDesktopPane1.removeAll();
                Reservation an1 = new Reservation("502", "2500");
                h.jDesktopPane1.add(an1);
                an1.show();
            } else {

                JOptionPane.showMessageDialog(this, "Can not reserve.Because it is not available at the moment");

            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(Room_Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_no502ActionPerformed

    private void no503ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_no503ActionPerformed
        String sql;
        sql = "Select * from room where status='Free' and RoomNo= 503 ";
        try {
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

        } catch (SQLException ex) {
            Logger.getLogger(Room_Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            if (rs.next()) {
                CustomerHome h = new CustomerHome();
                h.setVisible(true);
                h.jDesktopPane1.removeAll();
                Reservation an1 = new Reservation("503", "5000");
                h.jDesktopPane1.add(an1);
                an1.show();
            } else {

                JOptionPane.showMessageDialog(this, "Can not reserve.Because it is not available at the moment");

            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(Room_Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_no503ActionPerformed

    private void no506ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_no506ActionPerformed
        String sql;
        sql = "Select * from room where status='Free' and RoomNo= 506 ";
        try {
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

        } catch (SQLException ex) {
            Logger.getLogger(Room_Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            if (rs.next()) {
                CustomerHome h = new CustomerHome();
                h.setVisible(true);
                h.jDesktopPane1.removeAll();
                Reservation an1 = new Reservation("506", "5000");
                h.jDesktopPane1.add(an1);
                an1.show();
            } else {

                JOptionPane.showMessageDialog(this, "Can not reserve.Because it is not available at the moment");

            }
        } catch (SQLException ex) {
            Logger.getLogger(Room_Reservation.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Room_Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_no506ActionPerformed

    private void no504ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_no504ActionPerformed
        String sql;
        sql = "Select * from room where status='Free' and RoomNo= 504 ";
        try {
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

        } catch (SQLException ex) {
            Logger.getLogger(Room_Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            if (rs.next()) {
                CustomerHome h = new CustomerHome();
                h.setVisible(true);
                h.jDesktopPane1.removeAll();
                Reservation an1 = new Reservation("504", "4500");
                h.jDesktopPane1.add(an1);
                an1.show();
            } else {

                JOptionPane.showMessageDialog(this, "Can not reserve.Because it is not available at the moment");

            }
        } catch (SQLException ex) {
            Logger.getLogger(Room_Reservation.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Room_Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_no504ActionPerformed

    private void no501ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_no501ActionPerformed
        String sql;
        sql = "Select * from room where status='Free' and RoomNo= 501 ";
        try {
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();

        } catch (SQLException ex) {
            Logger.getLogger(Room_Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            if (rs.next()) {
                CustomerHome h = new CustomerHome();
                h.setVisible(true);
                h.jDesktopPane1.removeAll();
                Reservation an1 = new Reservation("501", "3000");
                h.jDesktopPane1.add(an1);
                an1.show();
            } else {

                JOptionPane.showMessageDialog(this, "Can not reserve.Because it is not available at the moment");

            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(Room_Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_no501ActionPerformed

    private void no507ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_no507ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_no507ActionPerformed

    private void no508ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_no508ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_no508ActionPerformed

    private void no509ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_no509ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_no509ActionPerformed

    private void no510ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_no510ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_no510ActionPerformed
    public void check(int num) {

        String sql;
        sql = "Select * from room where status='Free' and RoomNo='" + num + "'";
        try {
            pst = con.prepareStatement(sql);
            rs = pst.executeQuery();
            if (!rs.next()) {
                if (num == 501) {
                    no501.setBackground(Color.red);
                } else if (num == 502) {
                    no502.setBackground(Color.red);
                } else if (num == 503) {
                    no503.setBackground(Color.red);
                } else if (num == 504) {
                    no504.setBackground(Color.red);
                } else if (num == 505) {
                    no505.setBackground(Color.red);
                } else if (num == 506) {
                    no506.setBackground(Color.red);
                } else if (num == 507) {
                    no507.setBackground(Color.red);
                } else if (num == 508) {
                    no508.setBackground(Color.red);
                }
            } else {
                if (num == 501) {
                    no501.setBackground(Color.green);
                } else if (num == 502) {
                    no502.setBackground(Color.green);
                } else if (num == 503) {
                    no503.setBackground(Color.green);
                } else if (num == 504) {
                    no504.setBackground(Color.green);
                } else if (num == 505) {
                    no505.setBackground(Color.green);
                } else if (num == 506) {
                    no506.setBackground(Color.green);
                } else if (num == 507) {
                    no507.setBackground(Color.green);
                } else if (num == 508) {
                    no508.setBackground(Color.green);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(Room_Reservation.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public void image(int num) throws SQLException {
        if (num == 501) {
            String sql2 = "select image from room where RoomNo='" + num + "'";
            pst = con.prepareStatement(sql2);
            rs = pst.executeQuery();
            if (rs.next()) {
                byte[] imagedata = rs.getBytes("image");
                format = new ImageIcon(imagedata);
                box1.setIcon(format);
                no1box.setText(Integer.toString(num));
            }
        } else if (num == 502) {
            String sql2 = "select image from room where RoomNo='" + num + "'";
            pst = con.prepareStatement(sql2);
            rs = pst.executeQuery();
            if (rs.next()) {
                byte[] imagedata = rs.getBytes("image");
                format = new ImageIcon(imagedata);
                box2.setIcon(format);
                no2box.setText(Integer.toString(num));
            }
        } else if (num == 503) {
            String sql2 = "select image from room where RoomNo='" + num + "'";
            pst = con.prepareStatement(sql2);
            rs = pst.executeQuery();
            if (rs.next()) {
                byte[] imagedata = rs.getBytes("image");
                format = new ImageIcon(imagedata);
                box3.setIcon(format);
                no3box.setText(Integer.toString(num));
            }
        } else if (num == 504) {
            String sql2 = "select image from room where RoomNo='" + num + "'";
            pst = con.prepareStatement(sql2);
            rs = pst.executeQuery();
            if (rs.next()) {
                byte[] imagedata = rs.getBytes("image");
                format = new ImageIcon(imagedata);
                box4.setIcon(format);
                no4box.setText(Integer.toString(num));
            }
        } else if (num == 505) {
            String sql2 = "select image from room where RoomNo='" + num + "'";
            pst = con.prepareStatement(sql2);
            rs = pst.executeQuery();
            if (rs.next()) {
                byte[] imagedata = rs.getBytes("image");
                format = new ImageIcon(imagedata);
                box5.setIcon(format);
                no5box.setText(Integer.toString(num));
            }
        } else if (num == 506) {
            String sql2 = "select image from room where RoomNo='" + num + "'";
            pst = con.prepareStatement(sql2);
            rs = pst.executeQuery();
            if (rs.next()) {
                byte[] imagedata = rs.getBytes("image");
                format = new ImageIcon(imagedata);
                box6.setIcon(format);
                no6box.setText(Integer.toString(num));
            }
        } else if (num == 507) {
            String sql2 = "select image from room where RoomNo='" + num + "'";
            pst = con.prepareStatement(sql2);
            rs = pst.executeQuery();
            if (rs.next()) {
                byte[] imagedata = rs.getBytes("image");
                format = new ImageIcon(imagedata);
                box7.setIcon(format);
                no7box.setText(Integer.toString(num));
            }
        } else if (num == 508) {
            String sql2 = "select image from room where RoomNo='" + num + "'";
            pst = con.prepareStatement(sql2);
            rs = pst.executeQuery();
            if (rs.next()) {
                byte[] imagedata = rs.getBytes("image");
                format = new ImageIcon(imagedata);
                box.setIcon(format);
                no8box.setText(Integer.toString(num));
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel box;
    private javax.swing.JLabel box1;
    private javax.swing.JLabel box2;
    private javax.swing.JLabel box3;
    private javax.swing.JLabel box4;
    private javax.swing.JLabel box5;
    private javax.swing.JLabel box6;
    private javax.swing.JLabel box7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel no1box;
    private javax.swing.JLabel no1box1;
    private javax.swing.JLabel no2box;
    private javax.swing.JLabel no3box;
    private javax.swing.JLabel no4box;
    private javax.swing.JButton no501;
    private javax.swing.JButton no502;
    private javax.swing.JButton no503;
    private javax.swing.JButton no504;
    private javax.swing.JButton no505;
    private javax.swing.JButton no506;
    private javax.swing.JButton no507;
    private javax.swing.JButton no508;
    private javax.swing.JButton no509;
    private javax.swing.JButton no510;
    private javax.swing.JLabel no5box;
    private javax.swing.JLabel no6box;
    private javax.swing.JLabel no7box;
    private javax.swing.JLabel no8box;
    // End of variables declaration//GEN-END:variables
private ImageIcon format=null;
String filename =null;
int s = 0;
byte[] room_image =null;
}
